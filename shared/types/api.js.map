{"version":3,"file":"api.js","sourceRoot":"","sources":["api.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAsFxB,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,CAAC,MAAM,CAAC;IACxC,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACrB,KAAK,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;IAC7B,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE;CACvD,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC7C,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC3B,QAAQ,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;IAChC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE;IACxE,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IACrC,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CACnC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,CAAC,MAAM,CAAC;IACvC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;IAC7C,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC7B,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;CACnD,CAAC,CAAC;AAGH,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,OAAgB,EAChB,IAAQ,EACR,KAAc,EACd,OAAgB,EAChB,UAAyC,EACzB,EAAE,CAAC,CAAC;IACpB,OAAO;IACP,IAAI;IACJ,KAAK;IACL,OAAO;IACP,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;IACnC,UAAU;CACX,CAAC,CAAC;AAGH,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,KAAc,EAAqD,EAAE;IAC9F,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,IAAI,SAAS,IAAI,KAAK,CAAC;AAC3E,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,IAAa,EAA0B,EAAE;IACxE,OAAO,OAAO,IAAI,KAAK,QAAQ;QACxB,IAAI,KAAK,IAAI;QACb,cAAc,IAAI,IAAI;QACtB,mBAAmB,IAAI,IAAI,CAAC;AACrC,CAAC,CAAC","sourcesContent":["import { z } from 'zod';\r\n\r\n// Standard API Response Structure\r\nexport interface ApiResponse<T = unknown> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: string;\r\n  message?: string;\r\n  timestamp: string;\r\n  pagination?: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\n// Dashboard Statistics Interface\r\nexport interface DashboardStats {\r\n  totalUpdates: number;\r\n  uniqueUpdates: number;\r\n  totalLegalCases: number;\r\n  uniqueLegalCases: number;\r\n  recentUpdates: number;\r\n  recentLegalCases: number;\r\n  activeDataSources: number;\r\n  currentData: number;\r\n  archivedData: number;\r\n  duplicatesRemoved: string;\r\n  dataQuality: string;\r\n  totalArticles: number;\r\n  totalSubscribers: number;\r\n  pendingApprovals: number;\r\n  totalNewsletters: number;\r\n}\r\n\r\n// Data Source Interface\r\nexport interface DataSource {\r\n  id: string;\r\n  name: string;\r\n  type: 'regulatory' | 'standards' | 'legal' | 'guidelines' | 'recalls';\r\n  category: string;\r\n  isActive: boolean;\r\n  lastSync?: Date;\r\n  endpoint?: string;\r\n  description?: string;\r\n  region?: string;\r\n  frequency?: 'daily' | 'weekly' | 'monthly' | 'realtime';\r\n  credentialsRequired?: boolean;\r\n  status: 'active' | 'inactive' | 'error' | 'maintenance';\r\n}\r\n\r\n// Regulatory Update Interface\r\nexport interface RegulatoryUpdate {\r\n  id: string;\r\n  title: string;\r\n  content: string;\r\n  source: string;\r\n  type: 'regulation' | 'guidance' | 'standard' | 'announcement';\r\n  date: Date;\r\n  region: string;\r\n  category: string;\r\n  impactLevel: 'low' | 'medium' | 'high' | 'critical';\r\n  tags: string[];\r\n  url?: string;\r\n  documentId?: string;\r\n  status: 'draft' | 'published' | 'archived';\r\n}\r\n\r\n// Legal Case Interface\r\nexport interface LegalCase {\r\n  id: string;\r\n  title: string;\r\n  caseNumber: string;\r\n  court: string;\r\n  jurisdiction: string;\r\n  date: Date;\r\n  summary: string;\r\n  fullDecision?: string;\r\n  outcome: 'pending' | 'plaintiff' | 'defendant' | 'settled' | 'dismissed';\r\n  impactLevel: 'low' | 'medium' | 'high' | 'critical';\r\n  tags: string[];\r\n  relatedProducts?: string[];\r\n  precedentValue: 'low' | 'medium' | 'high';\r\n}\r\n\r\n// API Request Validation Schemas\r\nexport const SyncRequestSchema = z.object({\r\n  id: z.string().min(1),\r\n  force: z.boolean().optional(),\r\n  priority: z.enum(['low', 'medium', 'high']).optional()\r\n});\r\n\r\nexport const DataSourceUpdateSchema = z.object({\r\n  name: z.string().optional(),\r\n  isActive: z.boolean().optional(),\r\n  frequency: z.enum(['daily', 'weekly', 'monthly', 'realtime']).optional(),\r\n  endpoint: z.string().url().optional(),\r\n  description: z.string().optional()\r\n});\r\n\r\nexport const PaginationSchema = z.object({\r\n  page: z.number().min(1).default(1),\r\n  limit: z.number().min(1).max(100).default(50),\r\n  sortBy: z.string().optional(),\r\n  sortOrder: z.enum(['asc', 'desc']).default('desc')\r\n});\r\n\r\n// Utility function to create standardized API responses\r\nexport const createApiResponse = <T>(\r\n  success: boolean,\r\n  data?: T,\r\n  error?: string,\r\n  message?: string,\r\n  pagination?: ApiResponse<T>['pagination']\r\n): ApiResponse<T> => ({\r\n  success,\r\n  data,\r\n  error,\r\n  message,\r\n  timestamp: new Date().toISOString(),\r\n  pagination\r\n});\r\n\r\n// Type guards\r\nexport const isApiError = (error: unknown): error is { message: string; statusCode?: number } => {\r\n  return typeof error === 'object' && error !== null && 'message' in error;\r\n};\r\n\r\nexport const isDashboardStats = (data: unknown): data is DashboardStats => {\r\n  return typeof data === 'object' && \r\n         data !== null && \r\n         'totalUpdates' in data && \r\n         'activeDataSources' in data;\r\n};"]}