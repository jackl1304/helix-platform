{"version":3,"file":"piecesApiService.js","sourceRoot":"","sources":["../../server/services/piecesApiService.ts"],"names":[],"mappings":"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","sourcesContent":["import fetch from 'node-fetch';\r\n\r\n/**\r\n * Pieces API Service - Integration für Code/Content Sharing\r\n * Ermöglicht das Teilen von regulatorischen Updates, Rechtsprechungen und Newsletter-Inhalten\r\n */\r\nexport class PiecesApiService {\r\n  private baseUrl: string;\r\n  \r\n  constructor() {\r\n    this.baseUrl = 'http://localhost:1000';\r\n  }\r\n  \r\n  /**\r\n   * Prüft ob Pieces API verfügbar ist\r\n   */\r\n  async isHealthy(): Promise<boolean> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/.well-known/health`);\r\n      return response.ok;\r\n    } catch (error) {\r\n      console.warn('[PIECES] API nicht verfügbar:', error);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Teilt ein regulatorisches Update als Piece\r\n   */\r\n  async shareRegulatoryUpdate(update: any): Promise<string | null> {\r\n    try {\r\n      const isHealthy = await this.isHealthy();\r\n      if (!isHealthy) {\r\n        console.warn('[PIECES] API nicht verfügbar - Regulatory Update wird nicht geteilt');\r\n        return null;\r\n      }\r\n      \r\n      const content = this.formatRegulatoryUpdateForSharing(update);\r\n      const shareUrl = await this.createSharedPiece(content, 'regulatory-update');\r\n      \r\n      console.log(`[PIECES] Regulatory Update geteilt: ${shareUrl}`);\r\n      return shareUrl;\r\n    } catch (error) {\r\n      console.error('[PIECES] Fehler beim Teilen des Regulatory Updates:', error);\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Teilt einen Rechtsfall als Piece\r\n   */\r\n  async shareLegalCase(legalCase: any): Promise<string | null> {\r\n    try {\r\n      const isHealthy = await this.isHealthy();\r\n      if (!isHealthy) {\r\n        console.warn('[PIECES] API nicht verfügbar - Rechtsfall wird nicht geteilt');\r\n        return null;\r\n      }\r\n      \r\n      const content = this.formatLegalCaseForSharing(legalCase);\r\n      const shareUrl = await this.createSharedPiece(content, 'legal-case');\r\n      \r\n      console.log(`[PIECES] Rechtsfall geteilt: ${shareUrl}`);\r\n      return shareUrl;\r\n    } catch (error) {\r\n      console.error('[PIECES] Fehler beim Teilen des Rechtsfalls:', error);\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Teilt Newsletter-Inhalt als Piece\r\n   */\r\n  async shareNewsletterContent(newsletter: any): Promise<string | null> {\r\n    try {\r\n      const isHealthy = await this.isHealthy();\r\n      if (!isHealthy) {\r\n        console.warn('[PIECES] API nicht verfügbar - Newsletter wird nicht geteilt');\r\n        return null;\r\n      }\r\n      \r\n      const content = this.formatNewsletterForSharing(newsletter);\r\n      const shareUrl = await this.createSharedPiece(content, 'newsletter');\r\n      \r\n      console.log(`[PIECES] Newsletter geteilt: ${shareUrl}`);\r\n      return shareUrl;\r\n    } catch (error) {\r\n      console.error('[PIECES] Fehler beim Teilen des Newsletters:', error);\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Erstellt einen geteilten Piece über die Pieces API\r\n   */\r\n  private async createSharedPiece(content: string, type: string): Promise<string> {\r\n    // Simuliert die Pieces API - würde in echter Implementierung die tatsächliche API verwenden\r\n    const response = await fetch(`${this.baseUrl}/pieces/share`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        content,\r\n        type,\r\n        metadata: {\r\n          source: 'Helix Regulatory Intelligence',\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      })\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Pieces API Fehler: ${response.status}`);\r\n    }\r\n    \r\n    const result = await response.json() as any;\r\n    return result.shareUrl || `${this.baseUrl}/shared/${result.id}`;\r\n  }\r\n  \r\n  /**\r\n   * Formatiert ein Regulatory Update für das Teilen\r\n   */\r\n  private formatRegulatoryUpdateForSharing(update: any): string {\r\n    return `# ${update.title}\r\n\r\n## 🏛️ Regulatorische Information\r\n- **Quelle:** ${update.jurisdiction || 'Unbekannt'}\r\n- **Typ:** ${update.type || 'Regulation'}\r\n- **Datum:** ${new Date(update.publishedDate || update.published_date).toLocaleDateString('de-DE')}\r\n- **Risiko-Level:** ${update.riskLevel || update.risk_level || 'Medium'}\r\n\r\n## 📝 Zusammenfassung\r\n${update.summary || update.description || 'Keine Zusammenfassung verfügbar'}\r\n\r\n## 📄 Vollständiger Inhalt\r\n${update.content || 'Vollständiger Inhalt wird nachgeladen...'}\r\n\r\n## 🏷️ Tags\r\n${update.tags ? update.tags.join(', ') : 'Keine Tags'}\r\n\r\n## 🔗 Dokumentation\r\n${update.documentUrl || update.document_url || 'Kein Originaldokument verfügbar'}\r\n\r\n---\r\n*Geteilt über Helix Regulatory Intelligence Platform*\r\n*Generiert am: ${new Date().toLocaleString('de-DE')}*`;\r\n  }\r\n  \r\n  /**\r\n   * Formatiert einen Rechtsfall für das Teilen\r\n   */\r\n  private formatLegalCaseForSharing(legalCase: any): string {\r\n    return `# ⚖️ ${legalCase.title}\r\n\r\n## 🏛️ Gerichtsinformationen\r\n- **Gericht:** ${legalCase.court}\r\n- **Aktenzeichen:** ${legalCase.caseNumber || legalCase.case_number}\r\n- **Entscheidungsdatum:** ${new Date(legalCase.decisionDate || legalCase.decision_date).toLocaleDateString('de-DE')}\r\n- **Rechtsprechung:** ${legalCase.jurisdiction}\r\n- **Impact Level:** ${legalCase.impactLevel || legalCase.impact_level}\r\n\r\n## 📝 Zusammenfassung\r\n${legalCase.summary || 'Keine Zusammenfassung verfügbar'}\r\n\r\n## ⚖️ Urteilsspruch\r\n${legalCase.verdict || 'Urteilsspruch wird nachgeladen...'}\r\n\r\n## 💰 Schadensersatz\r\n${legalCase.damages || 'Schadensersatzinformationen werden nachgeladen...'}\r\n\r\n## 📄 Vollständiger Inhalt\r\n${legalCase.content || 'Vollständiger Inhalt wird nachgeladen...'}\r\n\r\n## 🏷️ Schlagwörter\r\n${legalCase.keywords ? legalCase.keywords.join(', ') : 'Keine Schlagwörter'}\r\n\r\n## 🔗 Originaldokument\r\n${legalCase.documentUrl || legalCase.document_url || 'Kein Originaldokument verfügbar'}\r\n\r\n---\r\n*Geteilt über Helix Regulatory Intelligence Platform*\r\n*Generiert am: ${new Date().toLocaleString('de-DE')}*`;\r\n  }\r\n  \r\n  /**\r\n   * Formatiert einen Newsletter für das Teilen\r\n   */\r\n  private formatNewsletterForSharing(newsletter: any): string {\r\n    return `# 📧 ${newsletter.subject}\r\n\r\n## 📅 Newsletter-Informationen\r\n- **Gesendet am:** ${newsletter.sentAt ? new Date(newsletter.sentAt).toLocaleDateString('de-DE') : 'Noch nicht gesendet'}\r\n- **Status:** ${newsletter.status || 'draft'}\r\n- **Empfänger:** ${newsletter.recipientCount || 'Unbekannt'} Abonnenten\r\n\r\n## 📝 Inhalt\r\n${newsletter.content || 'Newsletter-Inhalt wird nachgeladen...'}\r\n\r\n## 🎯 Extrahierte Artikel\r\n${newsletter.extractedArticles ? newsletter.extractedArticles.length + ' Artikel extrahiert' : 'Keine Artikel extrahiert'}\r\n\r\n## 📊 Quellen\r\n${newsletter.sources ? newsletter.sources.map((s: any) => `- ${s.name}: ${s.url}`).join('\\n') : 'Keine Quellen definiert'}\r\n\r\n---\r\n*Geteilt über Helix Regulatory Intelligence Platform*\r\n*Newsletter-System - Automatische Generierung*\r\n*Erstellt am: ${new Date().toLocaleString('de-DE')}*`;\r\n  }\r\n  \r\n  /**\r\n   * Ruft einen geteilten Piece ab\r\n   */\r\n  async getSharedPiece(shareId: string): Promise<any> {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}/?p=${shareId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'text/html'\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Pieces API Fehler: ${response.status}`);\r\n      }\r\n      \r\n      return await response.text();\r\n    } catch (error) {\r\n      console.error('[PIECES] Fehler beim Abrufen des geteilten Pieces:', error);\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Automatisches Teilen wichtiger regulatorischer Änderungen\r\n   */\r\n  async autoShareCriticalUpdates(updates: any[]): Promise<string[]> {\r\n    const sharedUrls: string[] = [];\r\n    \r\n    for (const update of updates) {\r\n      // Nur kritische Updates automatisch teilen\r\n      if (this.isCriticalUpdate(update)) {\r\n        const shareUrl = await this.shareRegulatoryUpdate(update);\r\n        if (shareUrl) {\r\n          sharedUrls.push(shareUrl);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return sharedUrls;\r\n  }\r\n  \r\n  /**\r\n   * Prüft ob ein Update als kritisch eingestuft wird\r\n   */\r\n  private isCriticalUpdate(update: any): boolean {\r\n    const criticalKeywords = ['recall', 'safety', 'urgent', 'immediate', 'critical', 'emergency'];\r\n    const riskLevels = ['high', 'critical'];\r\n    \r\n    const title = (update.title || '').toLowerCase();\r\n    const content = (update.content || update.summary || '').toLowerCase();\r\n    const riskLevel = (update.riskLevel || update.risk_level || '').toLowerCase();\r\n    \r\n    return riskLevels.includes(riskLevel) || \r\n           criticalKeywords.some(keyword => title.includes(keyword) || content.includes(keyword));\r\n  }\r\n}\r\n\r\n// Singleton-Export\r\nexport const piecesApiService = new PiecesApiService();"]}