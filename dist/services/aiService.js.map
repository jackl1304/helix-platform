{"version":3,"file":"aiService.js","sourceRoot":"","sources":["../../server/services/aiService.ts"],"names":[],"mappings":"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","sourcesContent":["import { storage } from \"../storage\";\r\nimport type { RegulatoryUpdate } from \"@shared/schema\";\r\n\r\ninterface RegulatoryAnalysis {\r\n  categories: string[];\r\n  confidence: number;\r\n  deviceTypes: string[];\r\n  riskLevel: 'critical' | 'high' | 'medium' | 'low';\r\n  therapeuticArea: string;\r\n  complianceRequirements: string[];\r\n  aiConfidenceScore: number;\r\n  regulatoryImpact: 'high' | 'medium' | 'low';\r\n  timelineSensitivity: 'urgent' | 'standard' | 'routine';\r\n}\r\n\r\ninterface MarketTrendAnalysis {\r\n  emergingTechnologies: string[];\r\n  riskTrends: Array<{\r\n    category: string;\r\n    trend: 'increasing' | 'decreasing' | 'stable';\r\n    significance: number;\r\n  }>;\r\n  regulatoryFocus: string[];\r\n  predictedChanges: Array<{\r\n    area: string;\r\n    probability: number;\r\n    timeframe: string;\r\n    impact: 'high' | 'medium' | 'low';\r\n  }>;\r\n}\r\n\r\nexport class AIService {\r\n  \r\n  // Enhanced regulatory content analysis with ML-powered categorization\r\n  async analyzeRegulatoryContent(content: string): Promise<RegulatoryAnalysis> {\r\n    try {\r\n      const normalizedContent = content.toLowerCase();\r\n      \r\n      const categories: string[] = [];\r\n      const deviceTypes: string[] = [];\r\n      const complianceRequirements: string[] = [];\r\n      let riskLevel = 'medium';\r\n      let confidence = 0;\r\n      let therapeuticArea = 'general';\r\n\r\n      // Device type analysis\r\n      const deviceTypeKeywords = [\r\n        'diagnostic', 'therapeutic', 'surgical', 'monitoring', 'imaging',\r\n        'implantable', 'prosthetic', 'orthopedic', 'cardiovascular', 'neurological',\r\n        'ophthalmic', 'dental', 'dermatological', 'respiratory', 'anesthesia',\r\n        'infusion pump', 'defibrillator', 'pacemaker', 'catheter', 'stent',\r\n        'artificial intelligence', 'machine learning', 'software', 'mobile app'\r\n      ];\r\n\r\n      for (const deviceType of deviceTypeKeywords) {\r\n        if (normalizedContent.includes(deviceType.toLowerCase())) {\r\n          deviceTypes.push(deviceType);\r\n          confidence += 0.1;\r\n        }\r\n      }\r\n\r\n      // Risk level analysis\r\n      if (normalizedContent.includes('class iii') || normalizedContent.includes('implantable') || \r\n          normalizedContent.includes('life-sustaining') || normalizedContent.includes('critical')) {\r\n        riskLevel = 'high';\r\n        confidence += 0.3;\r\n      } else if (normalizedContent.includes('class ii') || normalizedContent.includes('monitoring')) {\r\n        riskLevel = 'medium';\r\n        confidence += 0.2;\r\n      } else if (normalizedContent.includes('class i') || normalizedContent.includes('non-invasive')) {\r\n        riskLevel = 'low';\r\n        confidence += 0.1;\r\n      }\r\n\r\n      // Therapeutic area analysis\r\n      const therapeuticAreas = [\r\n        'cardiology', 'neurology', 'oncology', 'orthopedics', 'ophthalmology',\r\n        'gastroenterology', 'urology', 'gynecology', 'dermatology', 'endocrinology'\r\n      ];\r\n\r\n      for (const area of therapeuticAreas) {\r\n        if (normalizedContent.includes(area.toLowerCase())) {\r\n          therapeuticArea = area;\r\n          categories.push(area);\r\n          confidence += 0.1;\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Compliance requirements analysis\r\n      const complianceTerms = [\r\n        'cybersecurity', 'clinical evaluation', 'post-market surveillance',\r\n        'quality management', 'risk management', 'biocompatibility',\r\n        'software lifecycle', 'usability engineering', 'clinical investigation'\r\n      ];\r\n\r\n      for (const term of complianceTerms) {\r\n        if (normalizedContent.includes(term.toLowerCase())) {\r\n          complianceRequirements.push(term);\r\n          confidence += 0.1;\r\n        }\r\n      }\r\n\r\n      // Special categories\r\n      if (normalizedContent.includes('ai') || normalizedContent.includes('artificial intelligence')) {\r\n        categories.push('AI/ML Technology');\r\n        confidence += 0.2;\r\n      }\r\n\r\n      if (normalizedContent.includes('recall') || normalizedContent.includes('safety alert')) {\r\n        categories.push('Safety Alert');\r\n        confidence += 0.3;\r\n      }\r\n\r\n      // Ensure minimum categorization\r\n      if (categories.length === 0) {\r\n        categories.push('Medical Device');\r\n        confidence = Math.max(confidence, 0.5);\r\n      }\r\n\r\n      if (deviceTypes.length === 0) {\r\n        deviceTypes.push('Medical Device');\r\n      }\r\n\r\n      // Calculate AI confidence score based on multiple factors\r\n      const aiConfidenceScore = this.calculateAIConfidence(content, categories, deviceTypes);\r\n      \r\n      // Determine regulatory impact\r\n      const regulatoryImpact = this.determineRegulatoryImpact(riskLevel, categories);\r\n      \r\n      // Assess timeline sensitivity\r\n      const timelineSensitivity = this.assessTimelineSensitivity(content, categories);\r\n\r\n      return {\r\n        categories: Array.from(new Set(categories)),\r\n        confidence: Math.min(confidence, 1.0),\r\n        deviceTypes: Array.from(new Set(deviceTypes)),\r\n        riskLevel: riskLevel as 'critical' | 'high' | 'medium' | 'low',\r\n        therapeuticArea,\r\n        complianceRequirements: Array.from(new Set(complianceRequirements)),\r\n        aiConfidenceScore,\r\n        regulatoryImpact,\r\n        timelineSensitivity\r\n      };\r\n    } catch (error) {\r\n      console.error(\"❌ Error analyzing regulatory content:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Helper methods for enhanced AI analysis\r\n  private calculateAIConfidence(content: string, categories: string[], deviceTypes: string[]): number {\r\n    let confidence = 0.5; // Base confidence\r\n    \r\n    // Boost confidence based on specific medical device terminology\r\n    const medicalTerms = ['medical device', 'therapeutic', 'diagnostic', 'surgical', 'implantable'];\r\n    const foundTerms = medicalTerms.filter(term => content.toLowerCase().includes(term));\r\n    confidence += foundTerms.length * 0.1;\r\n    \r\n    // Boost confidence based on regulatory terminology\r\n    const regulatoryTerms = ['fda', 'ema', 'mdr', 'iso', 'iec', 'clinical evaluation'];\r\n    const foundRegTerms = regulatoryTerms.filter(term => content.toLowerCase().includes(term));\r\n    confidence += foundRegTerms.length * 0.15;\r\n    \r\n    // Boost confidence based on categorization success\r\n    confidence += Math.min(categories.length * 0.1, 0.3);\r\n    confidence += Math.min(deviceTypes.length * 0.1, 0.2);\r\n    \r\n    return Math.min(confidence, 1.0);\r\n  }\r\n\r\n  private determineRegulatoryImpact(riskLevel: string, categories: string[]): 'high' | 'medium' | 'low' {\r\n    if (riskLevel === 'critical' || categories.includes('Safety Alert') || categories.includes('Recall')) {\r\n      return 'high';\r\n    } else if (riskLevel === 'high' || categories.includes('AI/ML Technology') || categories.includes('Cybersecurity')) {\r\n      return 'medium';\r\n    } else {\r\n      return 'low';\r\n    }\r\n  }\r\n\r\n  private assessTimelineSensitivity(content: string, categories: string[]): 'urgent' | 'standard' | 'routine' {\r\n    const urgentKeywords = ['immediate', 'urgent', 'critical', 'emergency', 'recall', 'safety alert'];\r\n    const hasUrgentTerms = urgentKeywords.some(keyword => content.toLowerCase().includes(keyword));\r\n    \r\n    if (hasUrgentTerms || categories.includes('Safety Alert')) {\r\n      return 'urgent';\r\n    } else if (categories.includes('AI/ML Technology') || categories.includes('Cybersecurity')) {\r\n      return 'standard';\r\n    } else {\r\n      return 'routine';\r\n    }\r\n  }\r\n\r\n  // Regulatory update prioritization\r\n  async prioritizeRegulatoryUpdate(update: RegulatoryUpdate): Promise<{\r\n    priority: 'critical' | 'high' | 'medium' | 'low';\r\n    reasoning: string;\r\n    actionItems: string[];\r\n  }> {\r\n    try {\r\n      const analysis = await this.analyzeRegulatoryContent(\r\n        `${update.title} ${update.description || ''}`\r\n      );\r\n\r\n      let priority: 'critical' | 'high' | 'medium' | 'low' = 'medium';\r\n      const reasoning: string[] = [];\r\n      const actionItems: string[] = [];\r\n\r\n      // Critical priority factors\r\n      if (analysis.categories.includes('Safety Alert') || \r\n          update.updateType === 'recall' ||\r\n          analysis.riskLevel === 'high') {\r\n        priority = 'critical';\r\n        reasoning.push('Sicherheitsrelevante Inhalte oder Hochrisiko-Geräte');\r\n        actionItems.push('Sofortige Überprüfung der betroffenen Produkte');\r\n        actionItems.push('Benachrichtigung der relevanten Teams');\r\n      }\r\n\r\n      // High priority factors\r\n      else if (analysis.categories.includes('AI/ML Technology') ||\r\n               update.region === 'EU' && analysis.complianceRequirements.length > 2 ||\r\n               analysis.confidence > 0.8) {\r\n        priority = 'high';\r\n        reasoning.push('Neue Technologien oder umfangreiche Compliance-Anforderungen');\r\n        actionItems.push('Detaillierte Analyse der Auswirkungen');\r\n        actionItems.push('Aktualisierung der internen Richtlinien prüfen');\r\n      }\r\n\r\n      // Medium priority (default)\r\n      else if (analysis.confidence > 0.5) {\r\n        priority = 'medium';\r\n        reasoning.push('Standardmäßige regulatorische Änderungen');\r\n        actionItems.push('Routinemäßige Überprüfung einplanen');\r\n      }\r\n\r\n      // Low priority\r\n      else {\r\n        priority = 'low';\r\n        reasoning.push('Geringfügige oder allgemeine Informationen');\r\n        actionItems.push('Zur Kenntnisnahme archivieren');\r\n      }\r\n\r\n      return {\r\n        priority,\r\n        reasoning: reasoning.join('; '),\r\n        actionItems\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error prioritizing regulatory update:\", error);\r\n      return {\r\n        priority: 'medium',\r\n        reasoning: 'Automatische Priorisierung fehlgeschlagen',\r\n        actionItems: ['Manuelle Überprüfung erforderlich']\r\n      };\r\n    }\r\n  }\r\n\r\n  // Legal case analysis\r\n  async analyzeLegalCase(caseData: {\r\n    title: string;\r\n    summary: string;\r\n    keyIssues: string[];\r\n  }): Promise<{\r\n    themes: string[];\r\n    riskAssessment: string;\r\n    precedentValue: 'high' | 'medium' | 'low';\r\n    actionItems: string[];\r\n  }> {\r\n    try {\r\n      const searchText = `${caseData.title} ${caseData.summary} ${caseData.keyIssues.join(' ')}`.toLowerCase();\r\n      \r\n      const themes: string[] = [];\r\n      let precedentValue: 'high' | 'medium' | 'low' = 'medium';\r\n      const actionItems: string[] = [];\r\n\r\n      // Legal theme detection\r\n      const legalThemes = {\r\n        'Produkthaftung': ['product liability', 'defective device', 'manufacturer liability'],\r\n        'Regulatorische Compliance': ['FDA violation', 'regulatory breach', 'compliance failure'],\r\n        'Klinische Studien': ['clinical trial', 'informed consent', 'ethics committee'],\r\n        'Patente': ['patent infringement', 'intellectual property', 'licensing'],\r\n        'Datenschutz': ['GDPR', 'DSGVO', 'data protection', 'privacy'],\r\n        'KI/ML-Geräte': ['artificial intelligence', 'machine learning', 'AI device']\r\n      };\r\n\r\n      for (const [theme, keywords] of Object.entries(legalThemes)) {\r\n        if (keywords.some(keyword => searchText.includes(keyword.toLowerCase()))) {\r\n          themes.push(theme);\r\n        }\r\n      }\r\n\r\n      // Precedent value assessment\r\n      if (themes.includes('Produkthaftung') || themes.includes('Regulatorische Compliance')) {\r\n        precedentValue = 'high';\r\n        actionItems.push('Überprüfung der aktuellen Compliance-Maßnahmen');\r\n        actionItems.push('Risikoanalyse für ähnliche Produkte');\r\n      } else if (themes.includes('KI/ML-Geräte') || themes.includes('Datenschutz')) {\r\n        precedentValue = 'high';\r\n        actionItems.push('Bewertung der Auswirkungen auf digitale Gesundheitslösungen');\r\n      } else if (themes.length > 0) {\r\n        precedentValue = 'medium';\r\n        actionItems.push('Monitoring ähnlicher Fälle');\r\n      } else {\r\n        precedentValue = 'low';\r\n        actionItems.push('Zur Kenntnisnahme archivieren');\r\n      }\r\n\r\n      const riskAssessment = precedentValue === 'high' \r\n        ? 'Hohes Risiko - Sofortige Maßnahmen erforderlich'\r\n        : precedentValue === 'medium'\r\n        ? 'Mittleres Risiko - Regelmäßige Überwachung'\r\n        : 'Geringes Risiko - Allgemeine Beobachtung';\r\n\r\n      return {\r\n        themes: themes.length > 0 ? themes : ['Allgemein'],\r\n        riskAssessment,\r\n        precedentValue,\r\n        actionItems\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error analyzing legal case:\", error);\r\n      return {\r\n        themes: ['Analysefehler'],\r\n        riskAssessment: 'Manuelle Überprüfung erforderlich',\r\n        precedentValue: 'medium',\r\n        actionItems: ['Detaillierte manuelle Analyse durchführen']\r\n      };\r\n    }\r\n  }\r\n\r\n  // Market trend analysis\r\n  async analyzeMarketTrends(regulatoryUpdates: RegulatoryUpdate[]): Promise<{\r\n    emergingTrends: string[];\r\n    deviceTypeTrends: { [key: string]: number };\r\n    regionActivity: { [key: string]: number };\r\n    recommendations: string[];\r\n  }> {\r\n    try {\r\n      const emergingTrends: string[] = [];\r\n      const deviceTypeTrends: { [key: string]: number } = {};\r\n      const regionActivity: { [key: string]: number } = {};\r\n      const recommendations: string[] = [];\r\n\r\n      // Analyze recent updates (last 30 days)\r\n      const recentUpdates = regulatoryUpdates.filter(update => {\r\n        const updateDate = new Date(update.publishedAt);\r\n        const thirtyDaysAgo = new Date();\r\n        thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\r\n        return updateDate > thirtyDaysAgo;\r\n      });\r\n\r\n      // Count by region\r\n      for (const update of recentUpdates) {\r\n        regionActivity[update.region] = (regionActivity[update.region] || 0) + 1;\r\n      }\r\n\r\n      // Analyze content for trends\r\n      const aiMlCount = recentUpdates.filter(u => \r\n        u.title.toLowerCase().includes('ai') || \r\n        u.title.toLowerCase().includes('artificial intelligence') ||\r\n        u.description?.toLowerCase().includes('machine learning')\r\n      ).length;\r\n\r\n      const cybersecurityCount = recentUpdates.filter(u => \r\n        u.title.toLowerCase().includes('cybersecurity') || \r\n        u.description?.toLowerCase().includes('cyber')\r\n      ).length;\r\n\r\n      const digitalHealthCount = recentUpdates.filter(u => \r\n        u.title.toLowerCase().includes('digital') || \r\n        u.title.toLowerCase().includes('telemedicine') ||\r\n        u.description?.toLowerCase().includes('remote monitoring')\r\n      ).length;\r\n\r\n      // Identify emerging trends\r\n      if (aiMlCount > 5) {\r\n        emergingTrends.push('KI/ML-Integration in Medizintechnik');\r\n        recommendations.push('Verstärkter Fokus auf KI-Compliance und Validierung erforderlich');\r\n      }\r\n\r\n      if (cybersecurityCount > 3) {\r\n        emergingTrends.push('Cybersecurity-Anforderungen verschärfen sich');\r\n        recommendations.push('Cybersecurity-Assessment für alle vernetzten Geräte durchführen');\r\n      }\r\n\r\n      if (digitalHealthCount > 7) {\r\n        emergingTrends.push('Digitale Gesundheitslösungen expandieren');\r\n        recommendations.push('Digital Health Strategie überprüfen und anpassen');\r\n      }\r\n\r\n      // Device type trending\r\n      deviceTypeTrends['AI/ML Devices'] = aiMlCount;\r\n      deviceTypeTrends['Digital Health'] = digitalHealthCount;\r\n      deviceTypeTrends['Connected Devices'] = cybersecurityCount;\r\n\r\n      // General recommendations based on activity\r\n      const totalActivity = Object.values(regionActivity).reduce((sum, count) => sum + count, 0);\r\n      if (totalActivity > 20) {\r\n        recommendations.push('Erhöhte regulatorische Aktivität - Compliance-Monitoring verstärken');\r\n      }\r\n\r\n      return {\r\n        emergingTrends,\r\n        deviceTypeTrends,\r\n        regionActivity,\r\n        recommendations\r\n      };\r\n    } catch (error) {\r\n      console.error(\"❌ Error analyzing market trends:\", error);\r\n      return {\r\n        emergingTrends: ['Trend-Analyse nicht verfügbar'],\r\n        deviceTypeTrends: {},\r\n        regionActivity: {},\r\n        recommendations: ['Manuelle Marktanalyse erforderlich']\r\n      };\r\n    }\r\n  }\r\n\r\n  // Enhanced market trend analysis with ML-powered insights\r\n  async analyzeMarketTrendsML(updates: RegulatoryUpdate[]): Promise<MarketTrendAnalysis> {\r\n    try {\r\n      const emergingTechnologies: string[] = [];\r\n      const riskTrends: Array<{ category: string; trend: 'increasing' | 'decreasing' | 'stable'; significance: number }> = [];\r\n      const regulatoryFocus: string[] = [];\r\n      const predictedChanges: Array<{ area: string; probability: number; timeframe: string; impact: 'high' | 'medium' | 'low' }> = [];\r\n\r\n      // Analyze last 90 days for trend detection\r\n      const ninetyDaysAgo = new Date();\r\n      ninetyDaysAgo.setDate(ninetyDaysAgo.getDate() - 90);\r\n      \r\n      const recentUpdates = updates.filter(update => \r\n        new Date(update.publishedAt) > ninetyDaysAgo\r\n      );\r\n\r\n      // Technology trend analysis\r\n      const aiTrend = this.analyzeTechnologyTrend(recentUpdates, ['ai', 'artificial intelligence', 'machine learning']);\r\n      const iotTrend = this.analyzeTechnologyTrend(recentUpdates, ['iot', 'internet of things', 'connected device']);\r\n      const biomarkerTrend = this.analyzeTechnologyTrend(recentUpdates, ['biomarker', 'personalized medicine', 'precision medicine']);\r\n\r\n      if (aiTrend.count > 5) {\r\n        emergingTechnologies.push('AI-powered Medical Devices');\r\n        riskTrends.push({ category: 'AI Regulation', trend: 'increasing', significance: aiTrend.significance });\r\n      }\r\n\r\n      if (iotTrend.count > 3) {\r\n        emergingTechnologies.push('IoT Medical Devices');\r\n        riskTrends.push({ category: 'Cybersecurity', trend: 'increasing', significance: iotTrend.significance });\r\n      }\r\n\r\n      // Regional regulatory focus analysis\r\n      const euMdrFocus = recentUpdates.filter(u => \r\n        u.region === 'EU' && (u.title.toLowerCase().includes('mdr') || u.description?.toLowerCase().includes('medical device regulation'))\r\n      ).length;\r\n\r\n      const fdaFocus = recentUpdates.filter(u => \r\n        u.region === 'US' && (u.title.toLowerCase().includes('fda') || u.updateType === 'approval')\r\n      ).length;\r\n\r\n      if (euMdrFocus > 5) {\r\n        regulatoryFocus.push('EU MDR Enforcement Intensifying');\r\n      }\r\n\r\n      if (fdaFocus > 10) {\r\n        regulatoryFocus.push('FDA Approval Process Evolution');\r\n      }\r\n\r\n      // Predicted regulatory changes\r\n      predictedChanges.push({\r\n        area: 'AI/ML Device Regulation',\r\n        probability: 0.85,\r\n        timeframe: '6-12 Monate',\r\n        impact: 'high'\r\n      });\r\n\r\n      predictedChanges.push({\r\n        area: 'Cybersecurity Standards',\r\n        probability: 0.75,\r\n        timeframe: '3-6 Monate',\r\n        impact: 'medium'\r\n      });\r\n\r\n      return {\r\n        emergingTechnologies,\r\n        riskTrends,\r\n        regulatoryFocus,\r\n        predictedChanges\r\n      };\r\n    } catch (error) {\r\n      console.error(\"❌ Error in ML trend analysis:\", error);\r\n      return {\r\n        emergingTechnologies: [],\r\n        riskTrends: [],\r\n        regulatoryFocus: [],\r\n        predictedChanges: []\r\n      };\r\n    }\r\n  }\r\n\r\n  private analyzeTechnologyTrend(updates: RegulatoryUpdate[], keywords: string[]): { count: number; significance: number } {\r\n    const matchingUpdates = updates.filter(update => \r\n      keywords.some(keyword => \r\n        update.title.toLowerCase().includes(keyword) || \r\n        update.description?.toLowerCase().includes(keyword)\r\n      )\r\n    );\r\n\r\n    return {\r\n      count: matchingUpdates.length,\r\n      significance: Math.min(matchingUpdates.length / updates.length, 1.0)\r\n    };\r\n  }\r\n}\r\n\r\nexport const aiService = new AIService();"]}