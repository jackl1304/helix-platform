{"version":3,"file":"environment.js","sourceRoot":"","sources":["../../server/config/environment.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\r\n// Define ConfigurationError locally since @shared/types doesn't exist\r\nclass ConfigurationError extends Error {\r\n  public readonly code: string;\r\n  \r\n  constructor(code: string, message: string) {\r\n    super(message);\r\n    this.code = code;\r\n    Error.captureStackTrace(this, this.constructor);\r\n  }\r\n}\r\nimport { Logger } from '../services/logger.service';\r\n\r\nconst logger = new Logger('Environment');\r\n\r\n// Environment validation schema\r\nconst EnvironmentSchema = z.object({\r\n  NODE_ENV: z.enum(['development', 'production', 'test']).default('development'),\r\n  PORT: z.string().transform(Number).pipe(z.number().min(1).max(65535)).default('5000'),\r\n  DATABASE_URL: z.string().url('DATABASE_URL must be a valid URL'),\r\n  REPLIT_DEPLOYMENT: z.string().optional(),\r\n  LOG_LEVEL: z.enum(['error', 'warn', 'info', 'debug']).default('info'),\r\n  \r\n  // Optional API keys for external services\r\n  OPENAI_API_KEY: z.string().optional(),\r\n  ANTHROPIC_API_KEY: z.string().optional(),\r\n  SENDGRID_API_KEY: z.string().optional(),\r\n  \r\n  // Session configuration\r\n  SESSION_SECRET: z.string().min(32, 'SESSION_SECRET must be at least 32 characters').optional(),\r\n  \r\n  // Rate limiting\r\n  RATE_LIMIT_WINDOW_MS: z.string().transform(Number).pipe(z.number().positive()).default('900000'), // 15 minutes\r\n  RATE_LIMIT_MAX_REQUESTS: z.string().transform(Number).pipe(z.number().positive()).default('100'),\r\n  \r\n  // Database configuration\r\n  DB_POOL_MIN: z.string().transform(Number).pipe(z.number().min(0)).default('2'),\r\n  DB_POOL_MAX: z.string().transform(Number).pipe(z.number().min(1)).default('10'),\r\n  \r\n  // External service timeouts\r\n  API_TIMEOUT_MS: z.string().transform(Number).pipe(z.number().positive()).default('30000'),\r\n  \r\n  // Feature flags\r\n  ENABLE_RATE_LIMITING: z.string().transform(v => v === 'true').default('true'),\r\n  ENABLE_REQUEST_LOGGING: z.string().transform(v => v === 'true').default('true'),\r\n  ENABLE_PERFORMANCE_MONITORING: z.string().transform(v => v === 'true').default('true')\r\n});\r\n\r\nexport type Environment = z.infer<typeof EnvironmentSchema>;\r\n\r\nclass EnvironmentConfig {\r\n  private _config: Environment | null = null;\r\n\r\n  get config(): Environment {\r\n    if (!this._config) {\r\n      throw new ConfigurationError('ENVIRONMENT_NOT_LOADED', 'Environment configuration not loaded. Call validateAndLoad() first.');\r\n    }\r\n    return this._config;\r\n  }\r\n\r\n  validateAndLoad(): Environment {\r\n    try {\r\n      logger.info('Validating environment configuration');\r\n      \r\n      const result = EnvironmentSchema.safeParse(process.env);\r\n      \r\n      if (!result.success) {\r\n        const errors = result.error.errors.map(err => ({\r\n          field: err.path.join('.'),\r\n          message: err.message,\r\n          code: err.code\r\n        }));\r\n        \r\n        logger.error('Environment validation failed', { errors });\r\n        \r\n        throw new ConfigurationError(\r\n          'ENVIRONMENT_VALIDATION',\r\n          `Environment validation failed: ${errors.map(e => `${e.field}: ${e.message}`).join(', ')}`\r\n        );\r\n      }\r\n\r\n      this._config = result.data;\r\n      \r\n      logger.info('Environment configuration loaded successfully', {\r\n        nodeEnv: this._config.NODE_ENV,\r\n        port: this._config.PORT,\r\n        logLevel: this._config.LOG_LEVEL,\r\n        hasDatabaseUrl: !!this._config.DATABASE_URL,\r\n        hasSessionSecret: !!this._config.SESSION_SECRET,\r\n        rateLimitEnabled: this._config.ENABLE_RATE_LIMITING\r\n      });\r\n\r\n      return this._config;\r\n    } catch (error) {\r\n      logger.error('Failed to load environment configuration', {\r\n        error: error instanceof Error ? error.message : String(error)\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Helper methods for common checks\r\n  isDevelopment(): boolean {\r\n    return this.config.NODE_ENV === 'development';\r\n  }\r\n\r\n  isProduction(): boolean {\r\n    return this.config.NODE_ENV === 'production';\r\n  }\r\n\r\n  isTest(): boolean {\r\n    return this.config.NODE_ENV === 'test';\r\n  }\r\n\r\n  hasApiKey(service: 'openai' | 'anthropic' | 'sendgrid'): boolean {\r\n    switch (service) {\r\n      case 'openai':\r\n        return !!this.config.OPENAI_API_KEY;\r\n      case 'anthropic':\r\n        return !!this.config.ANTHROPIC_API_KEY;\r\n      case 'sendgrid':\r\n        return !!this.config.SENDGRID_API_KEY;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  getDatabaseConfig() {\r\n    return {\r\n      url: this.config.DATABASE_URL,\r\n      pool: {\r\n        min: this.config.DB_POOL_MIN,\r\n        max: this.config.DB_POOL_MAX\r\n      }\r\n    };\r\n  }\r\n\r\n  getRateLimitConfig() {\r\n    return {\r\n      windowMs: this.config.RATE_LIMIT_WINDOW_MS,\r\n      max: this.config.RATE_LIMIT_MAX_REQUESTS,\r\n      enabled: this.config.ENABLE_RATE_LIMITING\r\n    };\r\n  }\r\n\r\n  // Validate specific environment requirements\r\n  validateDatabaseConnection(): void {\r\n    if (!this.config.DATABASE_URL) {\r\n      throw new ConfigurationError('DATABASE_URL', 'Database URL is required but not provided');\r\n    }\r\n\r\n    try {\r\n      new URL(this.config.DATABASE_URL);\r\n    } catch {\r\n      throw new ConfigurationError('DATABASE_URL', 'Database URL is not a valid URL');\r\n    }\r\n  }\r\n\r\n  validateProductionRequirements(): void {\r\n    if (!this.isProduction()) return;\r\n\r\n    const requiredInProduction = [\r\n      { key: 'SESSION_SECRET', value: this.config.SESSION_SECRET },\r\n    ];\r\n\r\n    const missing = requiredInProduction.filter(req => !req.value);\r\n    \r\n    if (missing.length > 0) {\r\n      throw new ConfigurationError(\r\n        'PRODUCTION_CONFIG',\r\n        `Production environment requires: ${missing.map(m => m.key).join(', ')}`\r\n      );\r\n    }\r\n\r\n    logger.info('Production environment validation passed');\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nexport const env = new EnvironmentConfig();\r\n\r\n// Export for convenience\r\nexport const validateEnvironment = (): Environment => {\r\n  const config = env.validateAndLoad();\r\n  env.validateDatabaseConnection();\r\n  env.validateProductionRequirements();\r\n  return config;\r\n};"]}