{"version":3,"file":"enhancedLegalAnalysisService.js","sourceRoot":"","sources":["../../../server/services/enhancedLegalAnalysisService.ts"],"names":[],"mappings":"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","sourcesContent":["import { storage } from '../storage';\r\nimport type { LegalCase } from '@shared/schema';\r\n\r\ninterface LegalTheme {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  keywords: string[];\r\n  relatedCases: string[];\r\n  precedentValue: 'high' | 'medium' | 'low';\r\n  jurisdiction: string[];\r\n  category: string;\r\n}\r\n\r\ninterface CaseRelationship {\r\n  caseId1: string;\r\n  caseId2: string;\r\n  relationshipType: 'precedent' | 'similar_facts' | 'conflicting' | 'citing' | 'overturned';\r\n  strength: number; // 0-1\r\n  explanation: string;\r\n}\r\n\r\ninterface LegalAnalysis {\r\n  themes: LegalTheme[];\r\n  relationships: CaseRelationship[];\r\n  precedentChains: Array<{\r\n    theme: string;\r\n    cases: string[];\r\n    development: string;\r\n  }>;\r\n  conflictingDecisions: Array<{\r\n    issue: string;\r\n    cases: Array<{\r\n      caseId: string;\r\n      position: string;\r\n      jurisdiction: string;\r\n    }>;\r\n  }>;\r\n}\r\n\r\ninterface LegalTrendAnalysis {\r\n  emergingTrends: string[];\r\n  jurisdictionActivity: { [key: string]: number };\r\n  riskPatterns: string[];\r\n  litigationTypes: { [key: string]: number };\r\n  preventiveRecommendations: string[];\r\n}\r\n\r\nexport class EnhancedLegalAnalysisService {\r\n  private themes: LegalTheme[] = [\r\n    {\r\n      id: \"product_liability\",\r\n      name: \"Produkthaftung bei Medizinprodukten\",\r\n      description: \"Haftung des Herstellers für Schäden durch defekte Medizinprodukte\",\r\n      keywords: [\"product liability\", \"defective device\", \"manufacturer liability\", \"Produkthaftung\", \"Herstellerhaftung\"],\r\n      relatedCases: [],\r\n      precedentValue: \"high\",\r\n      jurisdiction: [\"US\", \"EU\", \"DE\", \"UK\"],\r\n      category: \"Liability\"\r\n    },\r\n    {\r\n      id: \"regulatory_compliance\",\r\n      name: \"Regulatorische Compliance-Verletzungen\",\r\n      description: \"Verstöße gegen FDA, EMA oder andere regulatorische Anforderungen\",\r\n      keywords: [\"FDA violation\", \"regulatory breach\", \"compliance failure\", \"EMA non-compliance\", \"Zulassungsverstoß\"],\r\n      relatedCases: [],\r\n      precedentValue: \"high\",\r\n      jurisdiction: [\"US\", \"EU\", \"DE\", \"UK\", \"CH\"],\r\n      category: \"Regulatory\"\r\n    },\r\n    {\r\n      id: \"clinical_trial_issues\",\r\n      name: \"Klinische Studien und Ethik\",\r\n      description: \"Probleme bei klinischen Studien, Einverständnis, Ethikkommissionen\",\r\n      keywords: [\"clinical trial\", \"informed consent\", \"ethics committee\", \"klinische Studie\", \"Aufklärung\"],\r\n      relatedCases: [],\r\n      precedentValue: \"medium\",\r\n      jurisdiction: [\"US\", \"EU\", \"DE\", \"UK\", \"CH\"],\r\n      category: \"Clinical\"\r\n    },\r\n    {\r\n      id: \"patent_ip\",\r\n      name: \"Patente und geistiges Eigentum\",\r\n      description: \"Patentstreitigkeiten, Lizenzierung, geistiges Eigentum bei Medizinprodukten\",\r\n      keywords: [\"patent infringement\", \"intellectual property\", \"licensing\", \"Patentverletzung\", \"Lizenzierung\"],\r\n      relatedCases: [],\r\n      precedentValue: \"medium\",\r\n      jurisdiction: [\"US\", \"EU\", \"DE\", \"UK\", \"CH\"],\r\n      category: \"IP\"\r\n    },\r\n    {\r\n      id: \"market_access\",\r\n      name: \"Marktzugang und Erstattung\",\r\n      description: \"Streitigkeiten um Marktzulassung, Preisgestaltung, Erstattung\",\r\n      keywords: [\"market access\", \"reimbursement\", \"pricing\", \"Marktzugang\", \"Erstattung\"],\r\n      relatedCases: [],\r\n      precedentValue: \"medium\",\r\n      jurisdiction: [\"US\", \"EU\", \"DE\", \"UK\", \"CH\"],\r\n      category: \"Market Access\"\r\n    },\r\n    {\r\n      id: \"data_privacy\",\r\n      name: \"Datenschutz und Medizindaten\",\r\n      description: \"GDPR/DSGVO Compliance, Patientendatenschutz, Cybersecurity\",\r\n      keywords: [\"GDPR\", \"DSGVO\", \"data protection\", \"patient privacy\", \"Datenschutz\"],\r\n      relatedCases: [],\r\n      precedentValue: \"high\",\r\n      jurisdiction: [\"EU\", \"DE\", \"UK\", \"CH\"],\r\n      category: \"Privacy\"\r\n    },\r\n    {\r\n      id: \"ai_ml_devices\",\r\n      name: \"KI/ML-basierte Medizinprodukte\",\r\n      description: \"Rechtliche Fragen zu künstlicher Intelligenz und maschinellem Lernen\",\r\n      keywords: [\"artificial intelligence\", \"machine learning\", \"AI device\", \"KI-Medizinprodukt\", \"algorithm\"],\r\n      relatedCases: [],\r\n      precedentValue: \"high\",\r\n      jurisdiction: [\"US\", \"EU\", \"DE\", \"UK\"],\r\n      category: \"AI/ML\"\r\n    }\r\n  ];\r\n\r\n  async analyzeLegalCases(cases: LegalCase[]): Promise<LegalAnalysis> {\r\n    console.log(`[Enhanced Legal Analysis] Analyzing ${cases.length} legal cases for themes and relationships...`);\r\n\r\n    const analysis: LegalAnalysis = {\r\n      themes: [],\r\n      relationships: [],\r\n      precedentChains: [],\r\n      conflictingDecisions: []\r\n    };\r\n\r\n    // 1. Kategorisiere Fälle nach Themen\r\n    for (const theme of this.themes) {\r\n      const relatedCases = this.findCasesForTheme(cases, theme);\r\n      if (relatedCases.length > 0) {\r\n        theme.relatedCases = relatedCases.map(c => c.id);\r\n        analysis.themes.push({\r\n          ...theme,\r\n          relatedCases: theme.relatedCases\r\n        });\r\n      }\r\n    }\r\n\r\n    // 2. Finde Beziehungen zwischen Fällen\r\n    analysis.relationships = this.findCaseRelationships(cases);\r\n\r\n    // 3. Erstelle Präzedenzfallketten\r\n    analysis.precedentChains = this.buildPrecedentChains(cases, analysis.relationships);\r\n\r\n    // 4. Identifiziere widersprüchliche Entscheidungen\r\n    analysis.conflictingDecisions = this.findConflictingDecisions(cases, analysis.themes);\r\n\r\n    console.log(`[Enhanced Legal Analysis] Analysis complete: ${analysis.themes.length} themes, ${analysis.relationships.length} relationships`);\r\n    return analysis;\r\n  }\r\n\r\n  async analyzeLegalTrends(cases: LegalCase[], timeframe: 'quarterly' | 'yearly' = 'yearly'): Promise<LegalTrendAnalysis> {\r\n    console.log(`[Enhanced Legal Analysis] Analyzing legal trends (${timeframe})...`);\r\n\r\n    const cutoffDate = new Date();\r\n    if (timeframe === 'quarterly') {\r\n      cutoffDate.setMonth(cutoffDate.getMonth() - 3);\r\n    } else {\r\n      cutoffDate.setFullYear(cutoffDate.getFullYear() - 1);\r\n    }\r\n\r\n    const recentCases = cases.filter(c => new Date(c.decisionDate || c.filingDate) >= cutoffDate);\r\n\r\n    const trends: LegalTrendAnalysis = {\r\n      emergingTrends: this.identifyEmergingTrends(recentCases),\r\n      jurisdictionActivity: this.analyzeJurisdictionActivity(recentCases),\r\n      riskPatterns: this.identifyRiskPatterns(recentCases),\r\n      litigationTypes: this.analyzeLitigationTypes(recentCases),\r\n      preventiveRecommendations: this.generatePreventiveRecommendations(recentCases)\r\n    };\r\n\r\n    console.log(`[Enhanced Legal Analysis] Trend analysis complete for ${recentCases.length} recent cases`);\r\n    return trends;\r\n  }\r\n\r\n  private findCasesForTheme(cases: LegalCase[], theme: LegalTheme): LegalCase[] {\r\n    return cases.filter(case_ => {\r\n      const searchText = `${case_.caseTitle} ${case_.summary} ${case_.keyIssues.join(' ')}`.toLowerCase();\r\n      \r\n      return theme.keywords.some(keyword => \r\n        searchText.includes(keyword.toLowerCase())\r\n      );\r\n    });\r\n  }\r\n\r\n  private findCaseRelationships(cases: LegalCase[]): CaseRelationship[] {\r\n    const relationships: CaseRelationship[] = [];\r\n\r\n    for (let i = 0; i < cases.length; i++) {\r\n      for (let j = i + 1; j < cases.length; j++) {\r\n        const case1 = cases[i];\r\n        const case2 = cases[j];\r\n\r\n        const relationship = this.analyzeCaseRelationship(case1, case2);\r\n        if (relationship.strength > 0.3) { // Nur signifikante Beziehungen\r\n          relationships.push(relationship);\r\n        }\r\n      }\r\n    }\r\n\r\n    return relationships.sort((a, b) => b.strength - a.strength);\r\n  }\r\n\r\n  private analyzeCaseRelationship(case1: LegalCase, case2: LegalCase): CaseRelationship {\r\n    let strength = 0;\r\n    let relationshipType: CaseRelationship['relationshipType'] = 'similar_facts';\r\n    let explanation = '';\r\n\r\n    // Prüfe auf gemeinsame Themen\r\n    const commonIssues = case1.keyIssues.filter(issue => \r\n      case2.keyIssues.some(issue2 => \r\n        issue.toLowerCase().includes(issue2.toLowerCase()) || \r\n        issue2.toLowerCase().includes(issue.toLowerCase())\r\n      )\r\n    );\r\n\r\n    strength += commonIssues.length * 0.2;\r\n\r\n    // Prüfe auf Zitierungen\r\n    if (case1.summary.toLowerCase().includes(case2.caseTitle.toLowerCase()) ||\r\n        case2.summary.toLowerCase().includes(case1.caseTitle.toLowerCase())) {\r\n      relationshipType = 'citing';\r\n      strength += 0.4;\r\n      explanation = 'One case cites the other as precedent';\r\n    }\r\n\r\n    // Prüfe auf ähnliche rechtliche Grundlagen\r\n    if (case1.legalBasis && case2.legalBasis) {\r\n      const basis1 = case1.legalBasis.toLowerCase();\r\n      const basis2 = case2.legalBasis.toLowerCase();\r\n      \r\n      if (basis1.includes(basis2) || basis2.includes(basis1)) {\r\n        strength += 0.3;\r\n        explanation = explanation || 'Cases share similar legal basis';\r\n      }\r\n    }\r\n\r\n    // Prüfe auf widersprüchliche Entscheidungen\r\n    if (commonIssues.length > 0 && case1.outcome !== case2.outcome) {\r\n      relationshipType = 'conflicting';\r\n      strength += 0.2;\r\n      explanation = 'Cases have conflicting outcomes on similar issues';\r\n    }\r\n\r\n    // Zeitliche Nähe\r\n    const date1 = new Date(case1.decisionDate || case1.filingDate);\r\n    const date2 = new Date(case2.decisionDate || case2.filingDate);\r\n    const daysDiff = Math.abs(date1.getTime() - date2.getTime()) / (1000 * 60 * 60 * 24);\r\n    \r\n    if (daysDiff < 365) {\r\n      strength += 0.1;\r\n    }\r\n\r\n    return {\r\n      caseId1: case1.id,\r\n      caseId2: case2.id,\r\n      relationshipType,\r\n      strength: Math.min(strength, 1.0),\r\n      explanation: explanation || 'Cases share common legal themes'\r\n    };\r\n  }\r\n\r\n  private buildPrecedentChains(cases: LegalCase[], relationships: CaseRelationship[]) {\r\n    const chains: Array<{ theme: string; cases: string[]; development: string }> = [];\r\n\r\n    // Gruppiere nach Themen\r\n    const themeGroups = new Map<string, LegalCase[]>();\r\n    \r\n    for (const theme of this.themes) {\r\n      const themeCases = this.findCasesForTheme(cases, theme);\r\n      if (themeCases.length > 1) {\r\n        themeGroups.set(theme.name, themeCases.sort((a, b) => \r\n          new Date(a.decisionDate || a.filingDate).getTime() - \r\n          new Date(b.decisionDate || b.filingDate).getTime()\r\n        ));\r\n      }\r\n    }\r\n\r\n    // Erstelle Ketten für jedes Thema\r\n    for (const [themeName, themeCases] of themeGroups) {\r\n      if (themeCases.length >= 2) {\r\n        chains.push({\r\n          theme: themeName,\r\n          cases: themeCases.map(c => c.id),\r\n          development: this.analyzeLegalDevelopment(themeCases)\r\n        });\r\n      }\r\n    }\r\n\r\n    return chains;\r\n  }\r\n\r\n  private findConflictingDecisions(cases: LegalCase[], themes: LegalTheme[]) {\r\n    const conflicts: Array<{\r\n      issue: string;\r\n      cases: Array<{ caseId: string; position: string; jurisdiction: string }>;\r\n    }> = [];\r\n\r\n    for (const theme of themes) {\r\n      const themeCases = this.findCasesForTheme(cases, theme);\r\n      \r\n      // Gruppiere nach Outcome\r\n      const outcomeGroups = new Map<string, LegalCase[]>();\r\n      for (const case_ of themeCases) {\r\n        const outcome = case_.outcome || 'unknown';\r\n        if (!outcomeGroups.has(outcome)) {\r\n          outcomeGroups.set(outcome, []);\r\n        }\r\n        outcomeGroups.get(outcome)!.push(case_);\r\n      }\r\n\r\n      // Identifiziere Konflikte\r\n      if (outcomeGroups.size > 1) {\r\n        const conflictCases: Array<{ caseId: string; position: string; jurisdiction: string }> = [];\r\n        \r\n        for (const [outcome, casesWithOutcome] of outcomeGroups) {\r\n          for (const case_ of casesWithOutcome) {\r\n            conflictCases.push({\r\n              caseId: case_.id,\r\n              position: outcome,\r\n              jurisdiction: case_.jurisdiction\r\n            });\r\n          }\r\n        }\r\n\r\n        if (conflictCases.length > 1) {\r\n          conflicts.push({\r\n            issue: theme.name,\r\n            cases: conflictCases\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return conflicts;\r\n  }\r\n\r\n  private identifyEmergingTrends(cases: LegalCase[]): string[] {\r\n    const trendKeywords = [\r\n      'artificial intelligence', 'machine learning', 'cybersecurity', 'data protection',\r\n      'telemedicine', 'digital health', 'remote monitoring', 'blockchain',\r\n      'software as medical device', 'algorithm bias', 'privacy by design'\r\n    ];\r\n\r\n    const trends: Map<string, number> = new Map();\r\n\r\n    for (const case_ of cases) {\r\n      const caseText = `${case_.caseTitle} ${case_.summary} ${case_.keyIssues.join(' ')}`.toLowerCase();\r\n      \r\n      for (const keyword of trendKeywords) {\r\n        if (caseText.includes(keyword.toLowerCase())) {\r\n          trends.set(keyword, (trends.get(keyword) || 0) + 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    return Array.from(trends.entries())\r\n      .sort((a, b) => b[1] - a[1])\r\n      .slice(0, 5)\r\n      .map(([trend]) => trend);\r\n  }\r\n\r\n  private analyzeJurisdictionActivity(cases: LegalCase[]): { [key: string]: number } {\r\n    const activity: { [key: string]: number } = {};\r\n\r\n    for (const case_ of cases) {\r\n      const jurisdiction = case_.jurisdiction || 'Unknown';\r\n      activity[jurisdiction] = (activity[jurisdiction] || 0) + 1;\r\n    }\r\n\r\n    return activity;\r\n  }\r\n\r\n  private identifyRiskPatterns(cases: LegalCase[]): string[] {\r\n    const riskIndicators = [\r\n      'class action', 'punitive damages', 'regulatory violation',\r\n      'criminal charges', 'injunctive relief', 'recall',\r\n      'death', 'serious injury', 'FDA warning letter'\r\n    ];\r\n\r\n    const patterns: Map<string, number> = new Map();\r\n\r\n    for (const case_ of cases) {\r\n      const caseText = `${case_.caseTitle} ${case_.summary}`.toLowerCase();\r\n      \r\n      for (const indicator of riskIndicators) {\r\n        if (caseText.includes(indicator.toLowerCase())) {\r\n          patterns.set(indicator, (patterns.get(indicator) || 0) + 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    return Array.from(patterns.entries())\r\n      .sort((a, b) => b[1] - a[1])\r\n      .slice(0, 5)\r\n      .map(([pattern]) => pattern);\r\n  }\r\n\r\n  private analyzeLitigationTypes(cases: LegalCase[]): { [key: string]: number } {\r\n    const types: { [key: string]: number } = {};\r\n\r\n    for (const case_ of cases) {\r\n      const caseType = case_.caseType || 'Other';\r\n      types[caseType] = (types[caseType] || 0) + 1;\r\n    }\r\n\r\n    return types;\r\n  }\r\n\r\n  private generatePreventiveRecommendations(cases: LegalCase[]): string[] {\r\n    const recommendations: string[] = [];\r\n    \r\n    // Basierend auf häufigen Problemen\r\n    const commonIssues = new Map<string, number>();\r\n    \r\n    for (const case_ of cases) {\r\n      for (const issue of case_.keyIssues) {\r\n        commonIssues.set(issue, (commonIssues.get(issue) || 0) + 1);\r\n      }\r\n    }\r\n\r\n    const topIssues = Array.from(commonIssues.entries())\r\n      .sort((a, b) => b[1] - a[1])\r\n      .slice(0, 3);\r\n\r\n    for (const [issue] of topIssues) {\r\n      if (issue.toLowerCase().includes('cybersecurity')) {\r\n        recommendations.push('Implementierung robuster Cybersecurity-Maßnahmen für alle vernetzten Medizinprodukte');\r\n      } else if (issue.toLowerCase().includes('clinical trial')) {\r\n        recommendations.push('Verstärkung der Aufklärungs- und Einverständnisprozesse bei klinischen Studien');\r\n      } else if (issue.toLowerCase().includes('product liability')) {\r\n        recommendations.push('Verbesserung der Qualitätssicherung und Post-Market-Surveillance');\r\n      } else if (issue.toLowerCase().includes('data protection')) {\r\n        recommendations.push('GDPR-konforme Datenverarbeitung und Privacy-by-Design-Ansätze');\r\n      } else {\r\n        recommendations.push(`Verstärkte Compliance-Maßnahmen bezüglich: ${issue}`);\r\n      }\r\n    }\r\n\r\n    return recommendations;\r\n  }\r\n\r\n  private analyzeLegalDevelopment(cases: LegalCase[]): string {\r\n    if (cases.length < 2) return 'Insufficient data for development analysis';\r\n\r\n    const firstCase = cases[0];\r\n    const lastCase = cases[cases.length - 1];\r\n\r\n    const developments: string[] = [];\r\n\r\n    if (firstCase.outcome !== lastCase.outcome) {\r\n      developments.push(`Rechtsprechung hat sich von \"${firstCase.outcome}\" zu \"${lastCase.outcome}\" entwickelt`);\r\n    }\r\n\r\n    // Weitere Entwicklungsanalyse...\r\n    \r\n    return developments.join('. ') || 'Konsistente Rechtsprechung über den Zeitraum';\r\n  }\r\n}\r\n\r\nexport const enhancedLegalAnalysisService = new EnhancedLegalAnalysisService();"]}