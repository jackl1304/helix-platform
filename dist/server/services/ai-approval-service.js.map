{"version":3,"file":"ai-approval-service.js","sourceRoot":"","sources":["../../../server/services/ai-approval-service.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAyBxC,MAAM,OAAO,iBAAiB;IAA9B;QACmB,gBAAW,GAAG,mBAAmB,CAAC;QAClC,0BAAqB,GAAG,IAAI,CAAC;QAC7B,0BAAqB,GAAG,IAAI,CAAC;QAC7B,0BAAqB,GAAG,IAAI,CAAC;IAqfhD,CAAC;IAhfC,KAAK,CAAC,wBAAwB,CAAC,MAAwB;QACrD,IAAI,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,gCAAgC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;YAG5D,MAAM,eAAe,GAAG,MAAM,SAAS,CAAC,wBAAwB,CAC9D,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,WAAW,IAAI,EAAE,EAAE,CAC9C,CAAC;YAGF,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;YAG/D,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;YAG7E,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;YAG5E,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CACxC,MAAM,EACN,eAAe,EACf,cAAc,EACd,cAAc,EACd,eAAe,CAChB,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,6BAA6B,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,KAAK,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC5H,OAAO,QAAQ,CAAC;QAElB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,2CAA2C,MAAM,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;YAC9E,OAAO;gBACL,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,CAAC;gBACb,SAAS,EAAE,CAAC,gDAAgD,CAAC;gBAC7D,eAAe,EAAE,CAAC,qCAAqC,CAAC;gBACxD,WAAW,EAAE,QAAQ;gBACrB,WAAW,EAAE,CAAC,oBAAoB,CAAC;gBACnC,gBAAgB,EAAE,CAAC,6BAA6B,CAAC;aAClD,CAAC;QACJ,CAAC;IACH,CAAC;IAKD,KAAK,CAAC,iBAAiB,CAAC,SAAoB;QAC1C,IAAI,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,2CAA2C,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;YAG1E,MAAM,aAAa,GAAG,MAAM,SAAS,CAAC,gBAAgB,CAAC;gBACrD,KAAK,EAAE,SAAS,CAAC,KAAK;gBACtB,OAAO,EAAE,SAAS,CAAC,OAAO;gBAC1B,SAAS,EAAE,SAAS,CAAC,QAAQ,IAAI,EAAE;aACpC,CAAC,CAAC;YAGH,MAAM,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YAC5D,MAAM,cAAc,GAAG,aAAa,CAAC,cAAc,CAAC;YAGpD,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;YAEnE,MAAM,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC;YAEhG,IAAI,QAAQ,GAAG,KAAK,CAAC;YACrB,IAAI,WAAW,GAA2C,QAAQ,CAAC;YAEnE,IAAI,UAAU,IAAI,IAAI,CAAC,qBAAqB,IAAI,cAAc,KAAK,MAAM,EAAE,CAAC;gBAC1E,QAAQ,GAAG,IAAI,CAAC;gBAChB,WAAW,GAAG,MAAM,CAAC;YACvB,CAAC;iBAAM,IAAI,UAAU,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBACpD,WAAW,GAAG,QAAQ,CAAC;YACzB,CAAC;YAED,OAAO;gBACL,QAAQ;gBACR,UAAU;gBACV,SAAS,EAAE;oBACT,oBAAoB,cAAc,EAAE;oBACpC,oBAAoB,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBAC/C,oBAAoB,aAAa,CAAC,cAAc,EAAE;iBACnD;gBACD,eAAe,EAAE,aAAa,CAAC,WAAW;gBAC1C,WAAW;gBACX,WAAW;gBACX,gBAAgB,EAAE,EAAE;aACrB,CAAC;QAEJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,8CAA8C,EAAE,KAAK,CAAC,CAAC;YACrE,OAAO;gBACL,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,CAAC;gBACb,SAAS,EAAE,CAAC,8BAA8B,CAAC;gBAC3C,eAAe,EAAE,CAAC,8BAA8B,CAAC;gBACjD,WAAW,EAAE,OAAO;gBACpB,WAAW,EAAE,CAAC,2BAA2B,CAAC;gBAC1C,gBAAgB,EAAE,EAAE;aACrB,CAAC;QACJ,CAAC;IACH,CAAC;IAKO,KAAK,CAAC,oBAAoB,CAAC,MAAwB;QACzD,MAAM,OAAO,GAAmB;YAC9B,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,CAAC;YACpB,cAAc,EAAE,CAAC;YACjB,UAAU,EAAE,CAAC;YACb,YAAY,EAAE,CAAC;SAChB,CAAC;QAGF,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QAG7D,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAG5E,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAGxD,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAGjE,OAAO,CAAC,YAAY,GAAG,CACrB,OAAO,CAAC,cAAc,GAAG,IAAI;YAC7B,OAAO,CAAC,iBAAiB,GAAG,IAAI;YAChC,OAAO,CAAC,cAAc,GAAG,IAAI;YAC7B,OAAO,CAAC,UAAU,GAAG,IAAI,CAC1B,CAAC;QAEF,OAAO,OAAO,CAAC;IACjB,CAAC;IAKO,sBAAsB,CAAC,MAAwB;QACrD,IAAI,KAAK,GAAG,GAAG,CAAC;QAGhB,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,EAAE,CAAC;YAC5E,KAAK,IAAI,IAAI,CAAC;QAChB,CAAC;QAGD,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC;YACvB,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG;gBAAE,KAAK,IAAI,IAAI,CAAC;YACpD,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,IAAI,GAAG;gBAAE,KAAK,IAAI,IAAI,CAAC;YAGpD,MAAM,WAAW,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;YACtF,MAAM,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CACjD,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CACnD,CAAC;YACF,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;QACvD,CAAC;QAGD,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACtD,KAAK,IAAI,IAAI,CAAC;QAChB,CAAC;QAED,IAAI,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC5D,KAAK,IAAI,IAAI,CAAC;QAChB,CAAC;QAED,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC;IAKO,yBAAyB,CAAC,QAAgB;QAChD,MAAM,cAAc,GAA8B;YAChD,UAAU,EAAE,IAAI;YAChB,aAAa,EAAE,IAAI;YACnB,UAAU,EAAE,IAAI;YAChB,kBAAkB,EAAE,IAAI;YACxB,uBAAuB,EAAE,IAAI;YAC7B,eAAe,EAAE,IAAI;YACrB,eAAe,EAAE,IAAI;YACrB,eAAe,EAAE,IAAI;YACrB,sBAAsB,EAAE,IAAI;YAC5B,YAAY,EAAE,IAAI;YAClB,YAAY,EAAE,IAAI;YAClB,eAAe,EAAE,IAAI;SACtB,CAAC;QAEF,OAAO,cAAc,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;IAC1C,CAAC;IAKO,iBAAiB,CAAC,MAAwB;QAChD,IAAI,KAAK,GAAG,GAAG,CAAC;QAEhB,MAAM,qBAAqB,GAAG;YAC5B,gBAAgB,EAAE,gBAAgB,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK;YAChE,qBAAqB,EAAE,0BAA0B,EAAE,eAAe;SACnE,CAAC;QAEF,MAAM,uBAAuB,GAAG;YAC9B,YAAY,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,cAAc;YACnE,yBAAyB,EAAE,kBAAkB,EAAE,YAAY;SAC5D,CAAC;QAEF,MAAM,OAAO,GAAG,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,WAAW,IAAI,EAAE,EAAE,CAAC,WAAW,EAAE,CAAC;QAG5E,MAAM,WAAW,GAAG,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;QACvF,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;QAGnD,MAAM,aAAa,GAAG,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;QAC3F,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;QAGrD,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;YAC3D,KAAK,IAAI,IAAI,CAAC;QAChB,CAAC;QAED,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC;IAKO,kBAAkB,CAAC,WAAiB;QAC1C,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAE5F,IAAI,SAAS,IAAI,CAAC;YAAE,OAAO,GAAG,CAAC;QAC/B,IAAI,SAAS,IAAI,EAAE;YAAE,OAAO,GAAG,CAAC;QAChC,IAAI,SAAS,IAAI,EAAE;YAAE,OAAO,GAAG,CAAC;QAChC,IAAI,SAAS,IAAI,GAAG;YAAE,OAAO,GAAG,CAAC;QACjC,IAAI,SAAS,IAAI,GAAG;YAAE,OAAO,GAAG,CAAC;QACjC,OAAO,GAAG,CAAC;IACb,CAAC;IAKO,KAAK,CAAC,iBAAiB,CAC7B,MAAwB,EACxB,QAAa;QAEb,MAAM,WAAW,GAAa,EAAE,CAAC;QAGjC,IAAI,QAAQ,CAAC,SAAS,KAAK,UAAU,IAAI,QAAQ,CAAC,SAAS,KAAK,MAAM,EAAE,CAAC;YACvE,WAAW,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QAChD,CAAC;QAGD,IAAI,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,MAAM,CAAC,UAAU,KAAK,QAAQ,EAAE,CAAC;YACnF,WAAW,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC9C,CAAC;QAGD,IAAI,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,CAAC;YACrD,WAAW,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QAChD,CAAC;QAGD,IAAI,QAAQ,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC/C,WAAW,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;QACtD,CAAC;QAGD,IAAI,QAAQ,CAAC,mBAAmB,KAAK,QAAQ,EAAE,CAAC;YAC9C,WAAW,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;QACvD,CAAC;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;IAKO,KAAK,CAAC,eAAe,CAC3B,MAAwB,EACxB,QAAa;QAEb,MAAM,gBAAgB,GAAa,EAAE,CAAC;QAGtC,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;YAC1D,gBAAgB,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QACvD,CAAC;QAGD,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACzD,gBAAgB,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QAC1D,CAAC;QAGD,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC/D,gBAAgB,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QACzD,CAAC;QAGD,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;YACzF,gBAAgB,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QACvD,CAAC;QAGD,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YAEnE,MAAM,OAAO,GAAG,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;YACtE,IAAI,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;gBACnE,gBAAgB,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YACxD,CAAC;QACH,CAAC;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAKO,oBAAoB,CAC1B,MAAwB,EACxB,QAAa,EACb,OAAuB,EACvB,WAAqB,EACrB,gBAA0B;QAE1B,IAAI,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC;QACtC,MAAM,SAAS,GAAa,EAAE,CAAC;QAC/B,MAAM,eAAe,GAAa,EAAE,CAAC;QAGrC,UAAU,IAAI,QAAQ,CAAC,iBAAiB,CAAC;QAGzC,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3B,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;YAC/C,SAAS,CAAC,IAAI,CAAC,4BAA4B,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC;QACnE,CAAC;QAGD,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAChC,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;YACrD,SAAS,CAAC,IAAI,CAAC,sBAAsB,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC;YAChE,eAAe,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAAC;QACvE,CAAC;QAGD,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,WAAW,GAA2C,OAAO,CAAC;QAElE,IAAI,UAAU,IAAI,IAAI,CAAC,qBAAqB,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC9E,QAAQ,GAAG,IAAI,CAAC;YAChB,WAAW,GAAG,MAAM,CAAC;YACrB,SAAS,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QACnD,CAAC;aAAM,IAAI,UAAU,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACpD,WAAW,GAAG,QAAQ,CAAC;YACvB,SAAS,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;YAC5D,eAAe,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;QAC1D,CAAC;aAAM,IAAI,UAAU,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACpD,WAAW,GAAG,QAAQ,CAAC;YACvB,SAAS,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;YAC3D,eAAe,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;QAC9D,CAAC;aAAM,CAAC;YACN,WAAW,GAAG,OAAO,CAAC;YACtB,SAAS,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;YACxD,eAAe,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;QAChE,CAAC;QAGD,SAAS,CAAC,IAAI,CAAC,kBAAkB,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACpE,SAAS,CAAC,IAAI,CAAC,kBAAkB,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAE1E,OAAO;YACL,QAAQ;YACR,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;YAChD,SAAS;YACT,eAAe;YACf,WAAW;YACX,WAAW;YACX,gBAAgB;SACjB,CAAC;IACJ,CAAC;IAKO,oBAAoB,CAAC,SAAoB;QAC/C,IAAI,KAAK,GAAG,GAAG,CAAC;QAEhB,MAAM,OAAO,GAAG,GAAG,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC,WAAW,EAAE,CAAC;QAGxE,MAAM,eAAe,GAAG;YACtB,gBAAgB,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO;YAC7D,mBAAmB,EAAE,qBAAqB,EAAE,kBAAkB;SAC/D,CAAC;QAEF,MAAM,YAAY,GAAG,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;QAClF,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;QAGpD,MAAM,aAAa,GAAG;YACpB,mBAAmB,EAAE,eAAe,EAAE,uBAAuB;YAC7D,gBAAgB,EAAE,kBAAkB,EAAE,qBAAqB;SAC5D,CAAC;QAEF,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9E,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;QAGlD,IAAI,SAAS,CAAC,WAAW,KAAK,MAAM,EAAE,CAAC;YACrC,KAAK,IAAI,IAAI,CAAC;QAChB,CAAC;aAAM,IAAI,SAAS,CAAC,WAAW,KAAK,QAAQ,EAAE,CAAC;YAC9C,KAAK,IAAI,IAAI,CAAC;QAChB,CAAC;QAED,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC;IAKO,eAAe,CAAC,SAAoB,EAAE,QAAa;QACzD,MAAM,WAAW,GAAa,EAAE,CAAC;QAEjC,IAAI,SAAS,CAAC,WAAW,KAAK,MAAM,EAAE,CAAC;YACrC,WAAW,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAClD,CAAC;QAED,IAAI,QAAQ,CAAC,cAAc,KAAK,MAAM,EAAE,CAAC;YACvC,WAAW,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;QACxD,CAAC;QAED,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE,CAAC;YAC/C,WAAW,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QACrD,CAAC;QAED,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,2BAA2B,CAAC,EAAE,CAAC;YAC1D,WAAW,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;QACzD,CAAC;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;IAKO,wBAAwB,CAC9B,cAAsB,EACtB,cAAyC,EACzC,QAAa;QAEb,IAAI,UAAU,GAAG,cAAc,GAAG,GAAG,CAAC;QAGtC,MAAM,eAAe,GAAG;YACtB,MAAM,EAAE,GAAG;YACX,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,GAAG;SACX,CAAC;QACF,UAAU,IAAI,eAAe,CAAC,cAAc,CAAC,CAAC;QAG9C,MAAM,cAAc,GAAG,CAAC,gBAAgB,EAAE,2BAA2B,EAAE,cAAc,CAAC,CAAC;QACvF,MAAM,mBAAmB,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAa,EAAE,EAAE,CACnE,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAC/B,CAAC;QACF,UAAU,IAAI,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,MAAM,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;QAEhE,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC;IAKD,iBAAiB;QACf,OAAO;YACL,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,UAAU,EAAE;gBACV,YAAY,EAAE,IAAI,CAAC,qBAAqB;gBACxC,YAAY,EAAE,IAAI,CAAC,qBAAqB;gBACxC,YAAY,EAAE,IAAI,CAAC,qBAAqB;aACzC;YACD,OAAO,EAAE,OAAO;YAChB,UAAU,EAAE,IAAI,IAAI,EAAE;SACvB,CAAC;IACJ,CAAC;CACF;AAED,MAAM,CAAC,MAAM,iBAAiB,GAAG,IAAI,iBAAiB,EAAE,CAAC","sourcesContent":["import { storage } from \"../storage\";\r\nimport { aiService } from \"./aiService\";\r\nimport type { RegulatoryUpdate, LegalCase } from \"@shared/schema\";\r\n\r\ninterface ApprovalDecision {\r\n  approved: boolean;\r\n  confidence: number;\r\n  reasoning: string[];\r\n  requiredActions: string[];\r\n  reviewLevel: 'auto' | 'senior' | 'expert' | 'board';\r\n  riskFactors: string[];\r\n  complianceIssues: string[];\r\n}\r\n\r\ninterface QualityMetrics {\r\n  contentQuality: number;\r\n  sourceReliability: number;\r\n  relevanceScore: number;\r\n  timeliness: number;\r\n  overallScore: number;\r\n}\r\n\r\n/**\r\n * AI-Powered Approval Service for Regulatory Intelligence\r\n * Implements intelligent content evaluation with multi-level approval workflows\r\n */\r\nexport class AIApprovalService {\r\n  private readonly serviceName = \"AIApprovalService\";\r\n  private readonly autoApprovalThreshold = 0.85;\r\n  private readonly seniorReviewThreshold = 0.70;\r\n  private readonly expertReviewThreshold = 0.50;\r\n\r\n  /**\r\n   * Comprehensive regulatory update approval process\r\n   */\r\n  async evaluateRegulatoryUpdate(update: RegulatoryUpdate): Promise<ApprovalDecision> {\r\n    try {\r\n      console.log(`🔍 [AI Approval] Evaluating: ${update.title}`);\r\n\r\n      // Step 1: Content Analysis\r\n      const contentAnalysis = await aiService.analyzeRegulatoryContent(\r\n        `${update.title} ${update.description || ''}`\r\n      );\r\n\r\n      // Step 2: Quality Assessment\r\n      const qualityMetrics = await this.assessContentQuality(update);\r\n\r\n      // Step 3: Risk Assessment\r\n      const riskAssessment = await this.assessContentRisk(update, contentAnalysis);\r\n\r\n      // Step 4: Compliance Check\r\n      const complianceCheck = await this.checkCompliance(update, contentAnalysis);\r\n\r\n      // Step 5: Decision Making\r\n      const decision = this.makeApprovalDecision(\r\n        update,\r\n        contentAnalysis,\r\n        qualityMetrics,\r\n        riskAssessment,\r\n        complianceCheck\r\n      );\r\n\r\n      console.log(`✅ [AI Approval] Decision: ${decision.approved ? 'APPROVED' : 'REJECTED'} (${decision.confidence.toFixed(2)})`);\r\n      return decision;\r\n\r\n    } catch (error) {\r\n      console.error(`❌ [AI Approval] Error evaluating update ${update.id}:`, error);\r\n      return {\r\n        approved: false,\r\n        confidence: 0,\r\n        reasoning: ['Approval system error - manual review required'],\r\n        requiredActions: ['Technical team investigation needed'],\r\n        reviewLevel: 'expert',\r\n        riskFactors: ['System malfunction'],\r\n        complianceIssues: ['Unable to verify compliance']\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Legal case approval evaluation\r\n   */\r\n  async evaluateLegalCase(legalCase: LegalCase): Promise<ApprovalDecision> {\r\n    try {\r\n      console.log(`⚖️ [AI Approval] Evaluating legal case: ${legalCase.title}`);\r\n\r\n      // Analyze legal case content\r\n      const legalAnalysis = await aiService.analyzeLegalCase({\r\n        title: legalCase.title,\r\n        summary: legalCase.summary,\r\n        keyIssues: legalCase.keywords || []\r\n      });\r\n\r\n      // Assess precedent value and relevance\r\n      const relevanceScore = this.assessLegalRelevance(legalCase);\r\n      const precedentValue = legalAnalysis.precedentValue;\r\n\r\n      // Risk assessment for legal cases\r\n      const riskFactors = this.assessLegalRisk(legalCase, legalAnalysis);\r\n      \r\n      const confidence = this.calculateLegalConfidence(relevanceScore, precedentValue, legalAnalysis);\r\n\r\n      let approved = false;\r\n      let reviewLevel: 'auto' | 'senior' | 'expert' | 'board' = 'expert';\r\n      \r\n      if (confidence >= this.autoApprovalThreshold && precedentValue === 'high') {\r\n        approved = true;\r\n        reviewLevel = 'auto';\r\n      } else if (confidence >= this.seniorReviewThreshold) {\r\n        reviewLevel = 'senior';\r\n      }\r\n\r\n      return {\r\n        approved,\r\n        confidence,\r\n        reasoning: [\r\n          `Precedent value: ${precedentValue}`,\r\n          `Relevance score: ${relevanceScore.toFixed(2)}`,\r\n          `Risk assessment: ${legalAnalysis.riskAssessment}`\r\n        ],\r\n        requiredActions: legalAnalysis.actionItems,\r\n        reviewLevel,\r\n        riskFactors,\r\n        complianceIssues: []\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error(`❌ [AI Approval] Error evaluating legal case:`, error);\r\n      return {\r\n        approved: false,\r\n        confidence: 0,\r\n        reasoning: ['Legal case evaluation failed'],\r\n        requiredActions: ['Manual legal review required'],\r\n        reviewLevel: 'board',\r\n        riskFactors: ['Evaluation system failure'],\r\n        complianceIssues: []\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assess content quality across multiple dimensions\r\n   */\r\n  private async assessContentQuality(update: RegulatoryUpdate): Promise<QualityMetrics> {\r\n    const metrics: QualityMetrics = {\r\n      contentQuality: 0,\r\n      sourceReliability: 0,\r\n      relevanceScore: 0,\r\n      timeliness: 0,\r\n      overallScore: 0\r\n    };\r\n\r\n    // Content Quality (40% weight)\r\n    metrics.contentQuality = this.evaluateContentQuality(update);\r\n\r\n    // Source Reliability (25% weight)\r\n    metrics.sourceReliability = this.evaluateSourceReliability(update.sourceId);\r\n\r\n    // Relevance Score (20% weight)\r\n    metrics.relevanceScore = this.evaluateRelevance(update);\r\n\r\n    // Timeliness (15% weight)\r\n    metrics.timeliness = this.evaluateTimeliness(update.publishedAt);\r\n\r\n    // Calculate overall score\r\n    metrics.overallScore = (\r\n      metrics.contentQuality * 0.40 +\r\n      metrics.sourceReliability * 0.25 +\r\n      metrics.relevanceScore * 0.20 +\r\n      metrics.timeliness * 0.15\r\n    );\r\n\r\n    return metrics;\r\n  }\r\n\r\n  /**\r\n   * Evaluate content quality based on length, structure, and keywords\r\n   */\r\n  private evaluateContentQuality(update: RegulatoryUpdate): number {\r\n    let score = 0.5; // Base score\r\n\r\n    // Title quality\r\n    if (update.title && update.title.length >= 20 && update.title.length <= 200) {\r\n      score += 0.15;\r\n    }\r\n\r\n    // Description quality\r\n    if (update.description) {\r\n      if (update.description.length >= 100) score += 0.15;\r\n      if (update.description.length >= 300) score += 0.10;\r\n      \r\n      // Check for regulatory keywords\r\n      const regKeywords = ['regulation', 'compliance', 'approval', 'standard', 'guideline'];\r\n      const foundKeywords = regKeywords.filter(keyword => \r\n        update.description.toLowerCase().includes(keyword)\r\n      );\r\n      score += Math.min(foundKeywords.length * 0.05, 0.15);\r\n    }\r\n\r\n    // Categories and classification\r\n    if (update.categories && update.categories.length > 0) {\r\n      score += 0.10;\r\n    }\r\n\r\n    if (update.deviceClasses && update.deviceClasses.length > 0) {\r\n      score += 0.05;\r\n    }\r\n\r\n    return Math.min(score, 1.0);\r\n  }\r\n\r\n  /**\r\n   * Evaluate source reliability based on known regulatory authorities\r\n   */\r\n  private evaluateSourceReliability(sourceId: string): number {\r\n    const reliabilityMap: { [key: string]: number } = {\r\n      'fda_510k': 0.95,\r\n      'fda_recalls': 0.98,\r\n      'ema_epar': 0.90,\r\n      'bfarm_guidelines': 0.85,\r\n      'swissmedic_guidelines': 0.85,\r\n      'mhra_guidance': 0.80,\r\n      'iso_standards': 0.90,\r\n      'iec_standards': 0.85,\r\n      'who_prequalification': 0.75,\r\n      'pmda_japan': 0.80,\r\n      'nmpa_china': 0.70,\r\n      'anvisa_brazil': 0.65\r\n    };\r\n\r\n    return reliabilityMap[sourceId] || 0.50; // Default for unknown sources\r\n  }\r\n\r\n  /**\r\n   * Evaluate content relevance to medical device regulation\r\n   */\r\n  private evaluateRelevance(update: RegulatoryUpdate): number {\r\n    let score = 0.3; // Base relevance\r\n\r\n    const highRelevanceKeywords = [\r\n      'medical device', 'medizinprodukt', 'mdr', 'ivdr', '510k', 'pma',\r\n      'clinical evaluation', 'post-market surveillance', 'cybersecurity'\r\n    ];\r\n\r\n    const mediumRelevanceKeywords = [\r\n      'healthcare', 'health technology', 'digital health', 'telemedicine',\r\n      'artificial intelligence', 'machine learning', 'iot device'\r\n    ];\r\n\r\n    const content = `${update.title} ${update.description || ''}`.toLowerCase();\r\n\r\n    // High relevance keywords\r\n    const highMatches = highRelevanceKeywords.filter(keyword => content.includes(keyword));\r\n    score += Math.min(highMatches.length * 0.20, 0.60);\r\n\r\n    // Medium relevance keywords\r\n    const mediumMatches = mediumRelevanceKeywords.filter(keyword => content.includes(keyword));\r\n    score += Math.min(mediumMatches.length * 0.10, 0.20);\r\n\r\n    // Region-specific relevance\r\n    if (['US', 'EU', 'DE', 'CH', 'UK'].includes(update.region)) {\r\n      score += 0.10;\r\n    }\r\n\r\n    return Math.min(score, 1.0);\r\n  }\r\n\r\n  /**\r\n   * Evaluate timeliness based on publication date\r\n   */\r\n  private evaluateTimeliness(publishedAt: Date): number {\r\n    const now = new Date();\r\n    const ageInDays = (now.getTime() - new Date(publishedAt).getTime()) / (1000 * 60 * 60 * 24);\r\n\r\n    if (ageInDays <= 7) return 1.0;      // Very fresh\r\n    if (ageInDays <= 30) return 0.8;     // Fresh\r\n    if (ageInDays <= 90) return 0.6;     // Recent\r\n    if (ageInDays <= 180) return 0.4;    // Somewhat dated\r\n    if (ageInDays <= 365) return 0.2;    // Old\r\n    return 0.1;                          // Very old\r\n  }\r\n\r\n  /**\r\n   * Assess content risk factors\r\n   */\r\n  private async assessContentRisk(\r\n    update: RegulatoryUpdate, \r\n    analysis: any\r\n  ): Promise<string[]> {\r\n    const riskFactors: string[] = [];\r\n\r\n    // High-risk device classes\r\n    if (analysis.riskLevel === 'critical' || analysis.riskLevel === 'high') {\r\n      riskFactors.push('High-risk device category');\r\n    }\r\n\r\n    // Safety-related content\r\n    if (analysis.categories.includes('Safety Alert') || update.updateType === 'recall') {\r\n      riskFactors.push('Safety-critical content');\r\n    }\r\n\r\n    // New technology risks\r\n    if (analysis.categories.includes('AI/ML Technology')) {\r\n      riskFactors.push('Emerging AI/ML technology');\r\n    }\r\n\r\n    // Regulatory complexity\r\n    if (analysis.complianceRequirements.length > 3) {\r\n      riskFactors.push('Complex compliance requirements');\r\n    }\r\n\r\n    // Timeline sensitivity\r\n    if (analysis.timelineSensitivity === 'urgent') {\r\n      riskFactors.push('Time-sensitive regulatory change');\r\n    }\r\n\r\n    return riskFactors;\r\n  }\r\n\r\n  /**\r\n   * Check compliance requirements and potential issues\r\n   */\r\n  private async checkCompliance(\r\n    update: RegulatoryUpdate,\r\n    analysis: any\r\n  ): Promise<string[]> {\r\n    const complianceIssues: string[] = [];\r\n\r\n    // Missing critical information\r\n    if (!update.description || update.description.length < 50) {\r\n      complianceIssues.push('Insufficient content detail');\r\n    }\r\n\r\n    // Missing categorization\r\n    if (!update.categories || update.categories.length === 0) {\r\n      complianceIssues.push('Missing content categorization');\r\n    }\r\n\r\n    // Missing device classification\r\n    if (!update.deviceClasses || update.deviceClasses.length === 0) {\r\n      complianceIssues.push('Missing device classification');\r\n    }\r\n\r\n    // Unclear priority assignment\r\n    if (!update.priority || !['critical', 'high', 'medium', 'low'].includes(update.priority)) {\r\n      complianceIssues.push('Invalid priority assignment');\r\n    }\r\n\r\n    // Regional compliance\r\n    if (update.region === 'EU' && !analysis.categories.includes('MDR')) {\r\n      // For EU content, check MDR relevance\r\n      const content = `${update.title} ${update.description}`.toLowerCase();\r\n      if (content.includes('medical device') && !content.includes('mdr')) {\r\n        complianceIssues.push('Potential MDR compliance gap');\r\n      }\r\n    }\r\n\r\n    return complianceIssues;\r\n  }\r\n\r\n  /**\r\n   * Make final approval decision based on all assessments\r\n   */\r\n  private makeApprovalDecision(\r\n    update: RegulatoryUpdate,\r\n    analysis: any,\r\n    quality: QualityMetrics,\r\n    riskFactors: string[],\r\n    complianceIssues: string[]\r\n  ): ApprovalDecision {\r\n    let confidence = quality.overallScore;\r\n    const reasoning: string[] = [];\r\n    const requiredActions: string[] = [];\r\n\r\n    // Adjust confidence based on analysis\r\n    confidence *= analysis.aiConfidenceScore;\r\n\r\n    // Reduce confidence for risk factors\r\n    if (riskFactors.length > 0) {\r\n      confidence *= (1 - (riskFactors.length * 0.1));\r\n      reasoning.push(`Risk factors identified: ${riskFactors.length}`);\r\n    }\r\n\r\n    // Reduce confidence for compliance issues\r\n    if (complianceIssues.length > 0) {\r\n      confidence *= (1 - (complianceIssues.length * 0.15));\r\n      reasoning.push(`Compliance issues: ${complianceIssues.length}`);\r\n      requiredActions.push('Address compliance issues before publication');\r\n    }\r\n\r\n    // Determine approval and review level\r\n    let approved = false;\r\n    let reviewLevel: 'auto' | 'senior' | 'expert' | 'board' = 'board';\r\n\r\n    if (confidence >= this.autoApprovalThreshold && complianceIssues.length === 0) {\r\n      approved = true;\r\n      reviewLevel = 'auto';\r\n      reasoning.push('High confidence, auto-approved');\r\n    } else if (confidence >= this.seniorReviewThreshold) {\r\n      reviewLevel = 'senior';\r\n      reasoning.push('Medium confidence, senior review required');\r\n      requiredActions.push('Senior reviewer approval needed');\r\n    } else if (confidence >= this.expertReviewThreshold) {\r\n      reviewLevel = 'expert';\r\n      reasoning.push('Lower confidence, expert review required');\r\n      requiredActions.push('Subject matter expert review needed');\r\n    } else {\r\n      reviewLevel = 'board';\r\n      reasoning.push('Low confidence, board review required');\r\n      requiredActions.push('Full board review and approval needed');\r\n    }\r\n\r\n    // Add quality score to reasoning\r\n    reasoning.push(`Quality score: ${quality.overallScore.toFixed(2)}`);\r\n    reasoning.push(`AI confidence: ${analysis.aiConfidenceScore.toFixed(2)}`);\r\n\r\n    return {\r\n      approved,\r\n      confidence: Math.max(0, Math.min(1, confidence)),\r\n      reasoning,\r\n      requiredActions,\r\n      reviewLevel,\r\n      riskFactors,\r\n      complianceIssues\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Assess legal case relevance to medical device regulation\r\n   */\r\n  private assessLegalRelevance(legalCase: LegalCase): number {\r\n    let score = 0.3;\r\n\r\n    const content = `${legalCase.title} ${legalCase.summary}`.toLowerCase();\r\n    \r\n    // Medical device specific terms\r\n    const medTechKeywords = [\r\n      'medical device', 'implant', 'pacemaker', 'catheter', 'stent',\r\n      'diagnostic device', 'surgical instrument', 'medical software'\r\n    ];\r\n\r\n    const foundMedTech = medTechKeywords.filter(keyword => content.includes(keyword));\r\n    score += Math.min(foundMedTech.length * 0.15, 0.45);\r\n\r\n    // Legal relevance terms\r\n    const legalKeywords = [\r\n      'product liability', 'fda violation', 'regulatory compliance',\r\n      'clinical trial', 'informed consent', 'medical malpractice'\r\n    ];\r\n\r\n    const foundLegal = legalKeywords.filter(keyword => content.includes(keyword));\r\n    score += Math.min(foundLegal.length * 0.10, 0.30);\r\n\r\n    // Impact level consideration\r\n    if (legalCase.impactLevel === 'high') {\r\n      score += 0.15;\r\n    } else if (legalCase.impactLevel === 'medium') {\r\n      score += 0.10;\r\n    }\r\n\r\n    return Math.min(score, 1.0);\r\n  }\r\n\r\n  /**\r\n   * Assess legal risk factors\r\n   */\r\n  private assessLegalRisk(legalCase: LegalCase, analysis: any): string[] {\r\n    const riskFactors: string[] = [];\r\n\r\n    if (legalCase.impactLevel === 'high') {\r\n      riskFactors.push('High-impact legal precedent');\r\n    }\r\n\r\n    if (analysis.precedentValue === 'high') {\r\n      riskFactors.push('Significant legal precedent value');\r\n    }\r\n\r\n    if (analysis.themes.includes('Produkthaftung')) {\r\n      riskFactors.push('Product liability implications');\r\n    }\r\n\r\n    if (analysis.themes.includes('Regulatorische Compliance')) {\r\n      riskFactors.push('Regulatory compliance implications');\r\n    }\r\n\r\n    return riskFactors;\r\n  }\r\n\r\n  /**\r\n   * Calculate confidence for legal case approval\r\n   */\r\n  private calculateLegalConfidence(\r\n    relevanceScore: number,\r\n    precedentValue: 'high' | 'medium' | 'low',\r\n    analysis: any\r\n  ): number {\r\n    let confidence = relevanceScore * 0.6;\r\n\r\n    // Precedent value weight\r\n    const precedentWeight = {\r\n      'high': 0.3,\r\n      'medium': 0.2,\r\n      'low': 0.1\r\n    };\r\n    confidence += precedentWeight[precedentValue];\r\n\r\n    // Theme relevance\r\n    const relevantThemes = ['Produkthaftung', 'Regulatorische Compliance', 'KI/ML-Geräte'];\r\n    const foundRelevantThemes = analysis.themes.filter((theme: string) => \r\n      relevantThemes.includes(theme)\r\n    );\r\n    confidence += Math.min(foundRelevantThemes.length * 0.05, 0.15);\r\n\r\n    return Math.min(confidence, 1.0);\r\n  }\r\n\r\n  /**\r\n   * Get approval service metrics and performance data\r\n   */\r\n  getServiceMetrics() {\r\n    return {\r\n      serviceName: this.serviceName,\r\n      thresholds: {\r\n        autoApproval: this.autoApprovalThreshold,\r\n        seniorReview: this.seniorReviewThreshold,\r\n        expertReview: this.expertReviewThreshold\r\n      },\r\n      version: \"2.0.0\",\r\n      lastUpdate: new Date()\r\n    };\r\n  }\r\n}\r\n\r\nexport const aiApprovalService = new AIApprovalService();"]}