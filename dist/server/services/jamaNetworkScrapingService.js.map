{"version":3,"file":"jamaNetworkScrapingService.js","sourceRoot":"","sources":["../../../server/services/jamaNetworkScrapingService.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAc1C,MAAM,OAAO,0BAA0B;IAAvC;QACU,WAAM,GAAG,IAAI,MAAM,CAAC,qBAAqB,CAAC,CAAC;QAC3C,YAAO,GAAG,yBAAyB,CAAC;IA0C9C,CAAC;IApCC,KAAK,CAAC,4BAA4B;QAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sEAAsE,CAAC,CAAC;QACzF,OAAO,EAAE,CAAC;IACZ,CAAC;IAMO,KAAK,CAAC,uBAAuB,CAAC,GAAW;QAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;QAC7E,OAAO,EAAE,CAAC;IACZ,CAAC;IAMO,KAAK,CAAC,aAAa,CAAC,GAAW;QACrC,OAAO,CAAC,CAAC;IACX,CAAC;IAMD,KAAK,CAAC,2BAA2B;QAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;IAC1F,CAAC;IAKO,KAAK,CAAC,EAAU;QACtB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;CACF;AAED,MAAM,CAAC,MAAM,0BAA0B,GAAG,IAAI,0BAA0B,EAAE,CAAC","sourcesContent":["import { Logger } from './logger.service';\r\nimport { storage } from '../storage';\r\n\r\ninterface JAMAArticle {\r\n  title: string;\r\n  url: string;\r\n  abstract: string;\r\n  authors: string[];\r\n  publishedDate: string;\r\n  journal: string;\r\n  doi?: string;\r\n  category: string;\r\n}\r\n\r\nexport class JAMANetworkScrapingService {\r\n  private logger = new Logger('JAMANetworkScraping');\r\n  private baseUrl = 'https://jamanetwork.com';\r\n  \r\n  /**\r\n   * **PRODUCTION MODE**: NO DEMO DATA\r\n   * Extract articles from JAMA Network Medical Devices collection\r\n   */\r\n  async extractMedicalDeviceArticles(): Promise<JAMAArticle[]> {\r\n    this.logger.warn('JAMA Network extraction DISABLED - No authentic API access available');\r\n    return [];\r\n  }\r\n  \r\n  /**\r\n   * **PRODUCTION MODE**: NO DEMO DATA\r\n   * Extract articles from a single page\r\n   */\r\n  private async extractArticlesFromPage(url: string): Promise<JAMAArticle[]> {\r\n    this.logger.warn('JAMA Network scraping DISABLED - No authentic API access');\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * **PRODUCTION MODE**: NO DEMO DATA\r\n   * Get total number of pages in a collection\r\n   */\r\n  private async getTotalPages(url: string): Promise<number> {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * **PRODUCTION MODE**: NO DEMO DATA\r\n   * Save articles to knowledge base\r\n   */\r\n  async saveArticlesToKnowledgeBase(): Promise<void> {\r\n    this.logger.info('JAMA Knowledge Base saving DISABLED - No authentic articles to save');\r\n  }\r\n\r\n  /**\r\n   * Utility delay function\r\n   */\r\n  private delay(ms: number): Promise<void> {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}\r\n\r\nexport const jamaNetworkScrapingService = new JAMANetworkScrapingService();"]}