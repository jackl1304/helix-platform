{"version":3,"file":"ai-search-routes.js","sourceRoot":"","sources":["../../../server/routes/ai-search-routes.ts"],"names":[],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport { perplexityService } from '../services/perplexity-service';\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * Intelligente Suche für regulatorische Updates\r\n */\r\nrouter.post('/search/regulatory', async (req, res) => {\r\n  try {\r\n    const { query, domain } = req.body;\r\n\r\n    if (!query) {\r\n      return res.status(400).json({\r\n        error: 'Query parameter is required'\r\n      });\r\n    }\r\n\r\n    console.log('[AI-SEARCH] Regulatory search request', { query, domain });\r\n\r\n    const result = await perplexityService.searchRegulatoryUpdates(query, domain);\r\n\r\n    res.json({\r\n      success: true,\r\n      query,\r\n      result: {\r\n        content: result.content,\r\n        citations: result.citations,\r\n        relatedQuestions: result.relatedQuestions || []\r\n      },\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('[AI-SEARCH] Regulatory search error', { error: error.message });\r\n    res.status(500).json({\r\n      error: 'Search failed',\r\n      message: error.message\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * KI-basierte Analyse von Rechtsfällen\r\n */\r\nrouter.post('/analyze/legal-case', async (req, res) => {\r\n  try {\r\n    const { caseData } = req.body;\r\n\r\n    if (!caseData || !caseData.title) {\r\n      return res.status(400).json({\r\n        error: 'Case data with title is required'\r\n      });\r\n    }\r\n\r\n    console.log('[AI-SEARCH] Legal case analysis request', { caseId: caseData.id });\r\n\r\n    const analysis = await perplexityService.analyzeLegalCase(caseData);\r\n\r\n    res.json({\r\n      success: true,\r\n      caseId: caseData.id,\r\n      analysis: {\r\n        summary: analysis.summary,\r\n        riskAssessment: analysis.riskAssessment,\r\n        precedentAnalysis: analysis.precedentAnalysis,\r\n        recommendations: analysis.recommendations,\r\n        citations: analysis.citations\r\n      },\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('[AI-SEARCH] Legal case analysis error', { error: error.message });\r\n    res.status(500).json({\r\n      error: 'Legal case analysis failed',\r\n      message: error.message\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * Content-Qualitätsbewertung mit KI\r\n */\r\nrouter.post('/evaluate/content', async (req, res) => {\r\n  try {\r\n    const { content } = req.body;\r\n\r\n    if (!content || !content.title) {\r\n      return res.status(400).json({\r\n        error: 'Content with title is required'\r\n      });\r\n    }\r\n\r\n    logger.info('[AI-SEARCH] Content evaluation request', { contentId: content.id });\r\n\r\n    const evaluation = await perplexityService.evaluateContent(content);\r\n\r\n    res.json({\r\n      success: true,\r\n      contentId: content.id,\r\n      evaluation: {\r\n        scores: {\r\n          quality: evaluation.qualityScore,\r\n          relevance: evaluation.relevanceScore,\r\n          compliance: evaluation.complianceScore,\r\n          overall: Math.round((evaluation.qualityScore + evaluation.relevanceScore + evaluation.complianceScore) / 3)\r\n        },\r\n        recommendations: evaluation.recommendations,\r\n        suggestedTags: evaluation.suggestedTags\r\n      },\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error('[AI-SEARCH] Content evaluation error', { error: error.message });\r\n    res.status(500).json({\r\n      error: 'Content evaluation failed',\r\n      message: error.message\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * Trend-Analyse für Dashboard\r\n */\r\nrouter.get('/trends/:timeframe?', async (req, res) => {\r\n  try {\r\n    const timeframe = req.params.timeframe || 'month';\r\n\r\n    if (!['week', 'month', 'quarter'].includes(timeframe)) {\r\n      return res.status(400).json({\r\n        error: 'Invalid timeframe. Use: week, month, or quarter'\r\n      });\r\n    }\r\n\r\n    logger.info('[AI-SEARCH] Trend analysis request', { timeframe });\r\n\r\n    const trends = await perplexityService.analyzeTrends(timeframe);\r\n\r\n    res.json({\r\n      success: true,\r\n      timeframe,\r\n      trends: {\r\n        emergingTopics: trends.emergingTopics,\r\n        riskAlerts: trends.riskAlerts,\r\n        complianceUpdates: trends.complianceUpdates,\r\n        marketInsights: trends.marketInsights\r\n      },\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error('[AI-SEARCH] Trend analysis error', { error: error.message });\r\n    res.status(500).json({\r\n      error: 'Trend analysis failed',\r\n      message: error.message\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * Bulk Content-Analyse für Admin-Dashboard\r\n */\r\nrouter.post('/bulk/analyze', async (req, res) => {\r\n  try {\r\n    const { contentItems, analysisType } = req.body;\r\n\r\n    if (!contentItems || !Array.isArray(contentItems)) {\r\n      return res.status(400).json({\r\n        error: 'Content items array is required'\r\n      });\r\n    }\r\n\r\n    logger.info('[AI-SEARCH] Bulk analysis request', { \r\n      itemCount: contentItems.length, \r\n      analysisType \r\n    });\r\n\r\n    const results = [];\r\n\r\n    // Process items in batches to avoid rate limits\r\n    for (const item of contentItems.slice(0, 5)) { // Limit for demo\r\n      try {\r\n        if (analysisType === 'legal') {\r\n          const analysis = await perplexityService.analyzeLegalCase(item);\r\n          results.push({\r\n            id: item.id,\r\n            success: true,\r\n            analysis\r\n          });\r\n        } else {\r\n          const evaluation = await perplexityService.evaluateContent(item);\r\n          results.push({\r\n            id: item.id,\r\n            success: true,\r\n            evaluation\r\n          });\r\n        }\r\n        \r\n        // Small delay to respect rate limits\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        \r\n      } catch (error) {\r\n        results.push({\r\n          id: item.id,\r\n          success: false,\r\n          error: error.message\r\n        });\r\n      }\r\n    }\r\n\r\n    res.json({\r\n      success: true,\r\n      processed: results.length,\r\n      total: contentItems.length,\r\n      results,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error('[AI-SEARCH] Bulk analysis error', { error: error.message });\r\n    res.status(500).json({\r\n      error: 'Bulk analysis failed',\r\n      message: error.message\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * Smart Content-Erstellung basierend auf Trends\r\n */\r\nrouter.post('/generate/content-suggestions', async (req, res) => {\r\n  try {\r\n    const { category, keywords, targetAudience } = req.body;\r\n\r\n    logger.info('[AI-SEARCH] Content suggestion request', { category, keywords });\r\n\r\n    // Use trend analysis to generate content suggestions\r\n    const trends = await perplexityService.analyzeTrends('month');\r\n    \r\n    // Combine trends with user requirements for suggestions\r\n    const suggestions = {\r\n      topicSuggestions: trends.emergingTopics.slice(0, 3),\r\n      keywordRecommendations: [\r\n        ...trends.complianceUpdates.slice(0, 2),\r\n        ...(keywords || [])\r\n      ],\r\n      contentTypes: [\r\n        'Regulatory Update Analysis',\r\n        'Compliance Guide',\r\n        'Market Trend Report',\r\n        'Risk Assessment'\r\n      ],\r\n      urgencyFlags: trends.riskAlerts.slice(0, 2)\r\n    };\r\n\r\n    res.json({\r\n      success: true,\r\n      category,\r\n      targetAudience,\r\n      suggestions,\r\n      basedOnTrends: true,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error('[AI-SEARCH] Content suggestions error', { error: error.message });\r\n    res.status(500).json({\r\n      error: 'Content suggestions failed',\r\n      message: error.message\r\n    });\r\n  }\r\n});\r\n\r\nexport default router;"]}