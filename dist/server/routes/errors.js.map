{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../../server/routes/errors.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Error Reporting Backend\r\n * Basierend auf Optimierungsbericht f√ºr robuste Fehlerbehandlung\r\n */\r\n\r\nimport { Router } from 'express';\r\nimport type { Request, Response } from 'express';\r\nimport { logger } from '../services/logger.service';\r\n\r\nconst router = Router();\r\n\r\ninterface ErrorReport {\r\n  timestamp: string;\r\n  error: {\r\n    message: string;\r\n    stack?: string;\r\n    name: string;\r\n  };\r\n  context: string;\r\n  userAgent: string;\r\n  url: string;\r\n  userId?: string;\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  additionalData?: Record<string, any>;\r\n}\r\n\r\n// Error reporting endpoint\r\nrouter.post('/report', async (req: Request, res: Response) => {\r\n  try {\r\n    const { errors }: { errors: ErrorReport[] } = req.body;\r\n\r\n    if (!Array.isArray(errors)) {\r\n      return res.status(400).json({ \r\n        success: false, \r\n        message: 'Invalid error report format' \r\n      });\r\n    }\r\n\r\n    // Process each error report\r\n    for (const errorReport of errors) {\r\n      // Log error with appropriate level\r\n      const logLevel = getLogLevel(errorReport.severity);\r\n      logger[logLevel]('Frontend Error Report', {\r\n        error: errorReport.error,\r\n        context: errorReport.context,\r\n        userAgent: errorReport.userAgent,\r\n        url: errorReport.url,\r\n        timestamp: errorReport.timestamp,\r\n        additionalData: errorReport.additionalData\r\n      });\r\n\r\n      // In production, send to external monitoring service\r\n      if (process.env.NODE_ENV === 'production') {\r\n        await sendToExternalMonitoring(errorReport);\r\n      }\r\n    }\r\n\r\n    res.json({ \r\n      success: true, \r\n      message: `Processed ${errors.length} error reports` \r\n    });\r\n  } catch (error) {\r\n    logger.error('Failed to process error reports', { error });\r\n    res.status(500).json({ \r\n      success: false, \r\n      message: 'Failed to process error reports' \r\n    });\r\n  }\r\n});\r\n\r\n// Get error statistics endpoint\r\nrouter.get('/stats', async (req: Request, res: Response) => {\r\n  try {\r\n    // In production, get from monitoring service\r\n    // For now, return mock stats\r\n    const stats = {\r\n      totalErrors: 0,\r\n      errorsByType: {\r\n        javascript: 0,\r\n        network: 0,\r\n        react: 0,\r\n        api: 0\r\n      },\r\n      errorsBySeverity: {\r\n        low: 0,\r\n        medium: 0,\r\n        high: 0,\r\n        critical: 0\r\n      },\r\n      lastUpdated: new Date().toISOString()\r\n    };\r\n\r\n    res.json({ success: true, stats });\r\n  } catch (error) {\r\n    logger.error('Failed to get error statistics', { error });\r\n    res.status(500).json({ \r\n      success: false, \r\n      message: 'Failed to get error statistics' \r\n    });\r\n  }\r\n});\r\n\r\nfunction getLogLevel(severity: string): 'info' | 'warn' | 'error' {\r\n  switch (severity) {\r\n    case 'low':\r\n      return 'info';\r\n    case 'medium':\r\n      return 'warn';\r\n    case 'high':\r\n    case 'critical':\r\n      return 'error';\r\n    default:\r\n      return 'warn';\r\n  }\r\n}\r\n\r\nasync function sendToExternalMonitoring(errorReport: ErrorReport): Promise<void> {\r\n  // Implementation for external monitoring service\r\n  // Example: Sentry, LogRocket, DataDog, etc.\r\n  try {\r\n    // Mock implementation - replace with actual service\r\n    console.log('[EXTERNAL MONITORING]', errorReport);\r\n  } catch (error) {\r\n    logger.warn('Failed to send error to external monitoring', { error });\r\n  }\r\n}\r\n\r\nexport default router;"]}